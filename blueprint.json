{
  "schema": {
    "type": "app_blueprint",
    "version": {
      "major": 0,
      "minor": 1
    },
    "origin": "Engines Developer Studio 0.2"
  },
  "metadata": {
    "blueprint": {
      "version": {
        "major": 0,
        "minor": 0,
        "level": "alpha",
        "patch": 0
      }
    },
    "timestamp": "2018-11-24T10:47:32+11:00"
  },
  "software": {
    "base": {
      "name": "nagios",
      "framework": "apache_php",
      "deployment_type": "web",
      "http_protocol": "https_only",
      "memory": {
        "required": 96,
        "recommended": 128
      }
    },
    "scripts": {
      "install": {
        "language": "sh",
        "content": "#!/bin/sh\r\n\r\ncd /home/app/src\r\nsh ./configure  --with-nagios-user=www-data  --with-nagios-group=www-data --with-command-group=www-data  --with-command-user=www-data --with-webdir=/home/app/www --with-mail=/usr/sbin/sendmail\r\nmake all\r\nmake install\r\nmake install-config\r\n\r\necho $nagios_admin_password >/home/app/password\r\n\r\n"
      },
      "first_run": {
        "language": "sh",
        "content": "#!/bin/sh\r\nconfig_dirs=\"hosts host_groups services service_groups contacts contact_groups timeperiods commands\"\r\n\r\ncp -r /usr/local/nagios/etc /home/fs/\r\nrm -r /usr/local/nagios/etc\r\nln -s /home/fs/etc /usr/local/nagios/\r\n\r\nnagios_admin_password=`cat /home/app/password`\r\nhtpasswd -c -b /usr/local/nagios/etc/htpasswd.users nagiosadmin $nagios_admin_password\r\nrm /home/app/password\r\ncp -r /usr/local/nagios/var /home/fs/\r\nrm -r /usr/local/nagios/var\r\nln -s /home/fs/var /usr/local/nagios/\r\nmkdir /home/fs/var/rw/\r\n\r\n#sudo -u data-user cp src/sample-config/*.cfg /home/fs/etc/\r\n#sudo -u data-user mkdir /home/fs/etc/objects\r\n#sudo -u data-user cp src/sample-config/template-object/*.cfg  /home/fs/etc/objects\r\n for config_dir in $config_dirs\r\n  do\r\n    sudo -u data-user mkdir /home/fs/etc/$config_dir\r\n done\r\nsudo -u data-user cp -r /home/fs_src/etc/* /home/fs/etc"
      }
    },
    "system_packages": [
      {
        "package": "libgd-dev"
      }
    ],
    "installed_packages": [
      {
        "name": "nagios-4.4.2.tar.gz",
        "download_type": "http(s)",
        "source_url": "https://assets.nagios.com/downloads/nagioscore/releases/nagios-4.4.2.tar.gz",
        "destination": "/home/app/src",
        "extraction_command": "tar -xzpf",
        "path_to_extracted": "nagios-4.4.2"
      }
    ],
    "required_modules": [
      {
        "name": "rewrite",
        "type": "apache"
      },
      {
        "name": "cgi",
        "type": "apache"
      }
    ],
    "service_configurations": [
      {
        "publisher_namespace": "EnginesSystem",
        "type_path": "filesystem/local/filesystem",
        "variables": {
          "service_name": "var",
          "volume_src": "",
          "engine_path": "/home/fs/var",
          "permissions": "rw",
          "user": "_Engines_Builder(data_uid)",
          "group": "_Engines_Builder(data_gid)"
        }
      },
      {
        "publisher_namespace": "EnginesSystem",
        "type_path": "filesystem/local/filesystem",
        "variables": {
          "service_name": "etc",
          "volume_src": "",
          "engine_path": "/home/fs/etc",
          "permissions": "rw",
          "user": "_Engines_Builder(data_uid)",
          "group": "_Engines_Builder(data_gid)"
        }
      }
    ],
    "environment_variables": [
      {
        "name": "nagios_admin_password",
        "mandatory": true,
        "ask_at_build_time": true,
        "build_time_only": true,
        "input": {
          "type": "password_with_confirmation",
          "label": "nagios_admin password",
          "comment": "password nagios_admin user"
        }
      },
      {
        "name": "admin_email",
        "mandatory": true,
        "input": {
          "type": "email"
        }
      },
      {
        "name": "admin_pager_email",
        "ask_at_build_time": true,
        "input": {
          "type": "email"
        }
      }
    ],
    "template_files": [
      {
        "path": "/home/fs_src/etc/nagios.cfg",
        "language": "text",
        "content": "##############################################################################\r\n#\r\n# NAGIOS.CFG - Sample Main Config File for Nagios 4.4.2\r\n#\r\n# Read the documentation for more information on this configuration\r\n# file.  I've provided some comments here, but things may not be so\r\n# clear without further explanation.\r\n#\r\n#\r\n##############################################################################\r\n\r\n\r\n# LOG FILE\r\n# This is the main log file where service and host events are logged\r\n# for historical purposes.  This should be the first option specified\r\n# in the config file!!!\r\n\r\nlog_file=/usr/local/nagios/var/nagios.log\r\n\r\n\r\n\r\n# OBJECT CONFIGURATION FILE(S)\r\n# These are the object configuration files in which you define hosts,\r\n# host groups, contacts, contact groups, services, etc.\r\n# You can split your object definitions across several config files\r\n# if you wish (as shown below), or keep them all in a single config file.\r\n\r\n# You can specify individual object config files as shown below:\r\ncfg_file=/usr/local/nagios/etc/objects/commands.cfg\r\ncfg_file=/usr/local/nagios/etc/objects/contacts.cfg\r\ncfg_file=/usr/local/nagios/etc/objects/timeperiods.cfg\r\ncfg_file=/usr/local/nagios/etc/objects/templates.cfg\r\n\r\n# You can also tell Nagios to process all config files (with a .cfg\r\n# extension) in a particular directory by using the cfg_dir\r\n# directive as shown below:\r\n\r\ncfg_dir=/usr/local/nagios/etc/hosts\r\ncfg_dir=/usr/local/nagios/etc/services\r\ncfg_dir=/usr/local/nagios/etc/contacts\r\n\r\ncfg_dir=/usr/local/nagios/etc/host_groups\r\ncfg_dir=/usr/local/nagios/etc/service_groups\r\ncfg_dir=/usr/local/nagios/etc/contact_groups\r\n\r\ncfg_dir=/usr/local/nagios/etc/timeperiods\r\ncfg_dir=/usr/local/nagios/etc/commands\r\n\r\n\r\n\r\n\r\n\r\n\r\n# OBJECT CACHE FILE\r\n# This option determines where object definitions are cached when\r\n# Nagios starts/restarts.  The CGIs read object definitions from\r\n# this cache file (rather than looking at the object config files\r\n# directly) in order to prevent inconsistencies that can occur\r\n# when the config files are modified after Nagios starts.\r\n\r\nobject_cache_file=/usr/local/nagios/var/objects.cache\r\n\r\n\r\n\r\n# PRE-CACHED OBJECT FILE\r\n# This options determines the location of the precached object file.\r\n# If you run Nagios with the -p command line option, it will preprocess\r\n# your object configuration file(s) and write the cached config to this\r\n# file.  You can then start Nagios with the -u option to have it read\r\n# object definitions from this precached file, rather than the standard\r\n# object configuration files (see the cfg_file and cfg_dir options above).\r\n# Using a precached object file can speed up the time needed to (re)start\r\n# the Nagios process if you've got a large and/or complex configuration.\r\n# Read the documentation section on optimizing Nagios to find our more\r\n# about how this feature works.\r\n\r\nprecached_object_file=/usr/local/nagios/var/objects.precache\r\n\r\n\r\n\r\n# RESOURCE FILE\r\n# This is an optional resource file that contains $USERx$ macro\r\n# definitions. Multiple resource files can be specified by using\r\n# multiple resource_file definitions.  The CGIs will not attempt to\r\n# read the contents of resource files, so information that is\r\n# considered to be sensitive (usernames, passwords, etc) can be\r\n# defined as macros in this file and restrictive permissions (600)\r\n# can be placed on this file.\r\n\r\nresource_file=/usr/local/nagios/etc/resource.cfg\r\n\r\n\r\n\r\n# STATUS FILE\r\n# This is where the current status of all monitored services and\r\n# hosts is stored.  Its contents are read and processed by the CGIs.\r\n# The contents of the status file are deleted every time Nagios\r\n#  restarts.\r\n\r\nstatus_file=/usr/local/nagios/var/status.dat\r\n\r\n\r\n\r\n# STATUS FILE UPDATE INTERVAL\r\n# This option determines the frequency (in seconds) that\r\n# Nagios will periodically dump program, host, and\r\n# service status data.\r\n\r\nstatus_update_interval=10\r\n\r\n\r\n\r\n# NAGIOS USER\r\n# This determines the effective user that Nagios should run as.\r\n# You can either supply a username or a UID.\r\n\r\nnagios_user=www-data\r\n\r\n\r\n\r\n# NAGIOS GROUP\r\n# This determines the effective group that Nagios should run as.\r\n# You can either supply a group name or a GID.\r\n\r\nnagios_group=www-data\r\n\r\n\r\n\r\n# EXTERNAL COMMAND OPTION\r\n# This option allows you to specify whether or not Nagios should check\r\n# for external commands (in the command file defined below). \r\n# By default Nagios will check for external commands.\r\n# If you want to be able to use the CGI command interface\r\n# you will have to enable this.\r\n# Values: 0 = disable commands, 1 = enable commands\r\n\r\ncheck_external_commands=1\r\n\r\n\r\n\r\n# EXTERNAL COMMAND FILE\r\n# This is the file that Nagios checks for external command requests.\r\n# It is also where the command CGI will write commands that are submitted\r\n# by users, so it must be writeable by the user that the web server\r\n# is running as (usually 'nobody').  Permissions should be set at the\r\n# directory level instead of on the file, as the file is deleted every\r\n# time its contents are processed.\r\n\r\ncommand_file=/usr/local/nagios/var/rw/nagios.cmd\r\n\r\n\r\n\r\n# QUERY HANDLER INTERFACE\r\n# This is the socket that is created for the Query Handler interface\r\n\r\n#query_socket=/usr/local/nagios/var/rw/nagios.qh\r\n\r\n\r\n\r\n# LOCK FILE\r\n# This is the lockfile that Nagios will use to store its PID number\r\n# in when it is running in daemon mode.\r\n\r\nlock_file=/run/nagios.lock\r\n\r\n\r\n\r\n# TEMP FILE\r\n# This is a temporary file that is used as scratch space when Nagios\r\n# updates the status log, cleans the comment file, etc.  This file\r\n# is created, used, and deleted throughout the time that Nagios is\r\n# running.\r\n\r\ntemp_file=/usr/local/nagios/var/nagios.tmp\r\n\r\n\r\n\r\n# TEMP PATH\r\n# This is path where Nagios can create temp files for service and\r\n# host check results, etc.\r\n\r\ntemp_path=/tmp\r\n\r\n\r\n\r\n# EVENT BROKER OPTIONS\r\n# Controls what (if any) data gets sent to the event broker.\r\n# Values:  0      = Broker nothing\r\n#         -1      = Broker everything\r\n#         <other> = See documentation\r\n\r\nevent_broker_options=-1\r\n\r\n\r\n\r\n# EVENT BROKER MODULE(S)\r\n# This directive is used to specify an event broker module that should\r\n# by loaded by Nagios at startup.  Use multiple directives if you want\r\n# to load more than one module.  Arguments that should be passed to\r\n# the module at startup are separated from the module path by a space.\r\n#\r\n#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n# WARNING !!! WARNING !!! WARNING !!! WARNING !!! WARNING !!! WARNING\r\n#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n#\r\n# Do NOT overwrite modules while they are being used by Nagios or Nagios\r\n# will crash in a fiery display of SEGFAULT glory.  This is a bug/limitation\r\n# either in dlopen(), the kernel, and/or the filesystem.  And maybe Nagios...\r\n#\r\n# The correct/safe way of updating a module is by using one of these methods:\r\n#    1. Shutdown Nagios, replace the module file, restart Nagios\r\n#    2. Delete the original module file, move the new module file into place,\r\n#\trestart Nagios\r\n#\r\n# Example:\r\n#\r\n#   broker_module=<modulepath> [moduleargs]\r\n\r\n#broker_module=/somewhere/module1.o\r\n#broker_module=/somewhere/module2.o arg1 arg2=3 debug=0\r\n\r\n\r\n\r\n# LOG ROTATION METHOD\r\n# This is the log rotation method that Nagios should use to rotate\r\n# the main log file. Values are as follows..\r\n#\tn\t= None - don't rotate the log\r\n#\th\t= Hourly rotation (top of the hour)\r\n#\td\t= Daily rotation (midnight every day)\r\n#\tw\t= Weekly rotation (midnight on Saturday evening)\r\n#\tm\t= Monthly rotation (midnight last day of month)\r\n\r\nlog_rotation_method=d\r\n\r\n\r\n\r\n# LOG ARCHIVE PATH\r\n# This is the directory where archived (rotated) log files should be\r\n# placed (assuming you've chosen to do log rotation).\r\n\r\nlog_archive_path=/usr/local/nagios/var/archives\r\n\r\n\r\n\r\n# LOGGING OPTIONS\r\n# If you want messages logged to the syslog facility, as well as the\r\n# Nagios log file set this option to 1.  If not, set it to 0.\r\n\r\nuse_syslog=1\r\n\r\n\r\n\r\n# NOTIFICATION LOGGING OPTION\r\n# If you don't want notifications to be logged, set this value to 0.\r\n# If notifications should be logged, set the value to 1.\r\n\r\nlog_notifications=1\r\n\r\n\r\n\r\n# SERVICE RETRY LOGGING OPTION\r\n# If you don't want service check retries to be logged, set this value\r\n# to 0.  If retries should be logged, set the value to 1.\r\n\r\nlog_service_retries=1\r\n\r\n\r\n\r\n# HOST RETRY LOGGING OPTION\r\n# If you don't want host check retries to be logged, set this value to\r\n# 0.  If retries should be logged, set the value to 1.\r\n\r\nlog_host_retries=1\r\n\r\n\r\n\r\n# EVENT HANDLER LOGGING OPTION\r\n# If you don't want host and service event handlers to be logged, set\r\n# this value to 0.  If event handlers should be logged, set the value\r\n# to 1.\r\n\r\nlog_event_handlers=1\r\n\r\n\r\n\r\n# INITIAL STATES LOGGING OPTION\r\n# If you want Nagios to log all initial host and service states to\r\n# the main log file (the first time the service or host is checked)\r\n# you can enable this option by setting this value to 1.  If you\r\n# are not using an external application that does long term state\r\n# statistics reporting, you do not need to enable this option.  In\r\n# this case, set the value to 0.\r\n\r\nlog_initial_states=0\r\n\r\n\r\n\r\n# CURRENT STATES LOGGING OPTION\r\n# If you don't want Nagios to log all current host and service states\r\n# after log has been rotated to the main log file, you can disable this\r\n# option by setting this value to 0. Default value is 1.\r\n\r\nlog_current_states=1\r\n\r\n\r\n\r\n# EXTERNAL COMMANDS LOGGING OPTION\r\n# If you don't want Nagios to log external commands, set this value\r\n# to 0.  If external commands should be logged, set this value to 1.\r\n# Note: This option does not include logging of passive service\r\n# checks - see the option below for controlling whether or not\r\n# passive checks are logged.\r\n\r\nlog_external_commands=1\r\n\r\n\r\n\r\n# PASSIVE CHECKS LOGGING OPTION\r\n# If you don't want Nagios to log passive host and service checks, set\r\n# this value to 0.  If passive checks should be logged, set\r\n# this value to 1.\r\n\r\nlog_passive_checks=1\r\n\r\n\r\n\r\n# GLOBAL HOST AND SERVICE EVENT HANDLERS\r\n# These options allow you to specify a host and service event handler\r\n# command that is to be run for every host or service state change.\r\n# The global event handler is executed immediately prior to the event\r\n# handler that you have optionally specified in each host or\r\n# service definition. The command argument is the short name of a\r\n# command definition that you define in your host configuration file.\r\n# Read the HTML docs for more information.\r\n\r\n#global_host_event_handler=somecommand\r\n#global_service_event_handler=somecommand\r\n\r\n\r\n\r\n# SERVICE INTER-CHECK DELAY METHOD\r\n# This is the method that Nagios should use when initially\r\n# \"spreading out\" service checks when it starts monitoring.  The\r\n# default is to use smart delay calculation, which will try to\r\n# space all service checks out evenly to minimize CPU load.\r\n# Using the dumb setting will cause all checks to be scheduled\r\n# at the same time (with no delay between them)!  This is not a\r\n# good thing for production, but is useful when testing the\r\n# parallelization functionality.\r\n#\tn\t= None - don't use any delay between checks\r\n#\td\t= Use a \"dumb\" delay of 1 second between checks\r\n#\ts\t= Use \"smart\" inter-check delay calculation\r\n#       x.xx    = Use an inter-check delay of x.xx seconds\r\n\r\nservice_inter_check_delay_method=s\r\n\r\n\r\n\r\n# MAXIMUM SERVICE CHECK SPREAD\r\n# This variable determines the timeframe (in minutes) from the\r\n# program start time that an initial check of all services should\r\n# be completed.  Default is 30 minutes.\r\n\r\nmax_service_check_spread=30\r\n\r\n\r\n\r\n# SERVICE CHECK INTERLEAVE FACTOR\r\n# This variable determines how service checks are interleaved.\r\n# Interleaving the service checks allows for a more even\r\n# distribution of service checks and reduced load on remote\r\n# hosts.  Setting this value to 1 is equivalent to how versions\r\n# of Nagios previous to 0.0.5 did service checks.  Set this\r\n# value to s (smart) for automatic calculation of the interleave\r\n# factor unless you have a specific reason to change it.\r\n#       s       = Use \"smart\" interleave factor calculation\r\n#       x       = Use an interleave factor of x, where x is a\r\n#                 number greater than or equal to 1.\r\n\r\nservice_interleave_factor=s\r\n\r\n\r\n\r\n# HOST INTER-CHECK DELAY METHOD\r\n# This is the method that Nagios should use when initially\r\n# \"spreading out\" host checks when it starts monitoring.  The\r\n# default is to use smart delay calculation, which will try to\r\n# space all host checks out evenly to minimize CPU load.\r\n# Using the dumb setting will cause all checks to be scheduled\r\n# at the same time (with no delay between them)!\r\n#\tn\t= None - don't use any delay between checks\r\n#\td\t= Use a \"dumb\" delay of 1 second between checks\r\n#\ts\t= Use \"smart\" inter-check delay calculation\r\n#       x.xx    = Use an inter-check delay of x.xx seconds\r\n\r\nhost_inter_check_delay_method=s\r\n\r\n\r\n\r\n# MAXIMUM HOST CHECK SPREAD\r\n# This variable determines the timeframe (in minutes) from the\r\n# program start time that an initial check of all hosts should\r\n# be completed.  Default is 30 minutes.\r\n\r\nmax_host_check_spread=30\r\n\r\n\r\n\r\n# MAXIMUM CONCURRENT SERVICE CHECKS\r\n# This option allows you to specify the maximum number of\r\n# service checks that can be run in parallel at any given time.\r\n# Specifying a value of 1 for this variable essentially prevents\r\n# any service checks from being parallelized.  A value of 0\r\n# will not restrict the number of concurrent checks that are\r\n# being executed.\r\n\r\nmax_concurrent_checks=0\r\n\r\n\r\n\r\n# HOST AND SERVICE CHECK REAPER FREQUENCY\r\n# This is the frequency (in seconds!) that Nagios will process\r\n# the results of host and service checks.\r\n\r\ncheck_result_reaper_frequency=10\r\n\r\n\r\n\r\n\r\n# MAX CHECK RESULT REAPER TIME\r\n# This is the max amount of time (in seconds) that  a single\r\n# check result reaper event will be allowed to run before\r\n# returning control back to Nagios so it can perform other\r\n# duties.\r\n\r\nmax_check_result_reaper_time=30\r\n\r\n\r\n\r\n\r\n# CHECK RESULT PATH\r\n# This is directory where Nagios stores the results of host and\r\n# service checks that have not yet been processed.\r\n#\r\n# Note: Make sure that only one instance of Nagios has access\r\n# to this directory!\r\n\r\ncheck_result_path=/usr/local/nagios/var/spool/checkresults\r\n\r\n\r\n\r\n\r\n# MAX CHECK RESULT FILE AGE\r\n# This option determines the maximum age (in seconds) which check\r\n# result files are considered to be valid.  Files older than this\r\n# threshold will be mercilessly deleted without further processing.\r\n\r\nmax_check_result_file_age=3600\r\n\r\n\r\n\r\n\r\n# CACHED HOST CHECK HORIZON\r\n# This option determines the maximum amount of time (in seconds)\r\n# that the state of a previous host check is considered current.\r\n# Cached host states (from host checks that were performed more\r\n# recently that the timeframe specified by this value) can immensely\r\n# improve performance in regards to the host check logic.\r\n# Too high of a value for this option may result in inaccurate host\r\n# states being used by Nagios, while a lower value may result in a\r\n# performance hit for host checks.  Use a value of 0 to disable host\r\n# check caching.\r\n\r\ncached_host_check_horizon=15\r\n\r\n\r\n\r\n# CACHED SERVICE CHECK HORIZON\r\n# This option determines the maximum amount of time (in seconds)\r\n# that the state of a previous service check is considered current.\r\n# Cached service states (from service checks that were performed more\r\n# recently that the timeframe specified by this value) can immensely\r\n# improve performance in regards to predictive dependency checks.\r\n# Use a value of 0 to disable service check caching.\r\n\r\ncached_service_check_horizon=15\r\n\r\n\r\n\r\n# ENABLE PREDICTIVE HOST DEPENDENCY CHECKS\r\n# This option determines whether or not Nagios will attempt to execute\r\n# checks of hosts when it predicts that future dependency logic test\r\n# may be needed.  These predictive checks can help ensure that your\r\n# host dependency logic works well.\r\n# Values:\r\n#  0 = Disable predictive checks\r\n#  1 = Enable predictive checks (default)\r\n\r\nenable_predictive_host_dependency_checks=1\r\n\r\n\r\n\r\n# ENABLE PREDICTIVE SERVICE DEPENDENCY CHECKS\r\n# This option determines whether or not Nagios will attempt to execute\r\n# checks of service when it predicts that future dependency logic test\r\n# may be needed.  These predictive checks can help ensure that your\r\n# service dependency logic works well.\r\n# Values:\r\n#  0 = Disable predictive checks\r\n#  1 = Enable predictive checks (default)\r\n\r\nenable_predictive_service_dependency_checks=1\r\n\r\n\r\n\r\n# SOFT STATE DEPENDENCIES\r\n# This option determines whether or not Nagios will use soft state\r\n# information when checking host and service dependencies. Normally\r\n# Nagios will only use the latest hard host or service state when\r\n# checking dependencies. If you want it to use the latest state (regardless\r\n# of whether its a soft or hard state type), enable this option.\r\n# Values:\r\n#  0 = Don't use soft state dependencies (default)\r\n#  1 = Use soft state dependencies\r\n\r\nsoft_state_dependencies=0\r\n\r\n\r\n\r\n# TIME CHANGE ADJUSTMENT THRESHOLDS\r\n# These options determine when Nagios will react to detected changes\r\n# in system time (either forward or backwards).\r\n\r\n#time_change_threshold=900\r\n\r\n\r\n\r\n# AUTO-RESCHEDULING OPTION\r\n# This option determines whether or not Nagios will attempt to\r\n# automatically reschedule active host and service checks to\r\n# \"smooth\" them out over time.  This can help balance the load on\r\n# the monitoring server.\r\n# WARNING: THIS IS AN EXPERIMENTAL FEATURE - IT CAN DEGRADE\r\n# PERFORMANCE, RATHER THAN INCREASE IT, IF USED IMPROPERLY\r\n\r\nauto_reschedule_checks=0\r\n\r\n\r\n\r\n# AUTO-RESCHEDULING INTERVAL\r\n# This option determines how often (in seconds) Nagios will\r\n# attempt to automatically reschedule checks.  This option only\r\n# has an effect if the auto_reschedule_checks option is enabled.\r\n# Default is 30 seconds.\r\n# WARNING: THIS IS AN EXPERIMENTAL FEATURE - IT CAN DEGRADE\r\n# PERFORMANCE, RATHER THAN INCREASE IT, IF USED IMPROPERLY\r\n\r\nauto_rescheduling_interval=30\r\n\r\n\r\n\r\n# AUTO-RESCHEDULING WINDOW\r\n# This option determines the \"window\" of time (in seconds) that\r\n# Nagios will look at when automatically rescheduling checks.\r\n# Only host and service checks that occur in the next X seconds\r\n# (determined by this variable) will be rescheduled. This option\r\n# only has an effect if the auto_reschedule_checks option is\r\n# enabled.  Default is 180 seconds (3 minutes).\r\n# WARNING: THIS IS AN EXPERIMENTAL FEATURE - IT CAN DEGRADE\r\n# PERFORMANCE, RATHER THAN INCREASE IT, IF USED IMPROPERLY\r\n\r\nauto_rescheduling_window=180\r\n\r\n\r\n\r\n# TIMEOUT VALUES\r\n# These options control how much time Nagios will allow various\r\n# types of commands to execute before killing them off.  Options\r\n# are available for controlling maximum time allotted for\r\n# service checks, host checks, event handlers, notifications, the\r\n# ocsp command, and performance data commands.  All values are in\r\n# seconds.\r\n\r\nservice_check_timeout=60\r\nhost_check_timeout=30\r\nevent_handler_timeout=30\r\nnotification_timeout=30\r\nocsp_timeout=5\r\nochp_timeout=5\r\nperfdata_timeout=5\r\n\r\n\r\n\r\n# RETAIN STATE INFORMATION\r\n# This setting determines whether or not Nagios will save state\r\n# information for services and hosts before it shuts down.  Upon\r\n# startup Nagios will reload all saved service and host state\r\n# information before starting to monitor.  This is useful for\r\n# maintaining long-term data on state statistics, etc, but will\r\n# slow Nagios down a bit when it (re)starts.  Since its only\r\n# a one-time penalty, I think its well worth the additional\r\n# startup delay.\r\n\r\nretain_state_information=1\r\n\r\n\r\n\r\n# STATE RETENTION FILE\r\n# This is the file that Nagios should use to store host and\r\n# service state information before it shuts down.  The state\r\n# information in this file is also read immediately prior to\r\n# starting to monitor the network when Nagios is restarted.\r\n# This file is used only if the retain_state_information\r\n# variable is set to 1.\r\n\r\nstate_retention_file=/usr/local/nagios/var/retention.dat\r\n\r\n\r\n\r\n# RETENTION DATA UPDATE INTERVAL\r\n# This setting determines how often (in minutes) that Nagios\r\n# will automatically save retention data during normal operation.\r\n# If you set this value to 0, Nagios will not save retention\r\n# data at regular interval, but it will still save retention\r\n# data before shutting down or restarting.  If you have disabled\r\n# state retention, this option has no effect.\r\n\r\nretention_update_interval=60\r\n\r\n\r\n\r\n# USE RETAINED PROGRAM STATE\r\n# This setting determines whether or not Nagios will set\r\n# program status variables based on the values saved in the\r\n# retention file.  If you want to use retained program status\r\n# information, set this value to 1.  If not, set this value\r\n# to 0.\r\n\r\nuse_retained_program_state=1\r\n\r\n\r\n\r\n# USE RETAINED SCHEDULING INFO\r\n# This setting determines whether or not Nagios will retain\r\n# the scheduling info (next check time) for hosts and services\r\n# based on the values saved in the retention file.  If you\r\n# If you want to use retained scheduling info, set this\r\n# value to 1.  If not, set this value to 0.\r\n\r\nuse_retained_scheduling_info=1\r\n\r\n\r\n\r\n# RETAINED ATTRIBUTE MASKS (ADVANCED FEATURE)\r\n# The following variables are used to specify specific host and\r\n# service attributes that should *not* be retained by Nagios during\r\n# program restarts.\r\n#\r\n# The values of the masks are bitwise ANDs of values specified\r\n# by the \"MODATTR_\" definitions found in include/common.h.\r\n# For example, if you do not want the current enabled/disabled state\r\n# of flap detection and event handlers for hosts to be retained, you\r\n# would use a value of 24 for the host attribute mask...\r\n# MODATTR_EVENT_HANDLER_ENABLED (8) + MODATTR_FLAP_DETECTION_ENABLED (16) = 24\r\n\r\n# This mask determines what host attributes are not retained\r\nretained_host_attribute_mask=0\r\n\r\n# This mask determines what service attributes are not retained\r\nretained_service_attribute_mask=0\r\n\r\n# These two masks determine what process attributes are not retained.\r\n# There are two masks, because some process attributes have host and service\r\n# options.  For example, you can disable active host checks, but leave active\r\n# service checks enabled.\r\nretained_process_host_attribute_mask=0\r\nretained_process_service_attribute_mask=0\r\n\r\n# These two masks determine what contact attributes are not retained.\r\n# There are two masks, because some contact attributes have host and\r\n# service options.  For example, you can disable host notifications for\r\n# a contact, but leave service notifications enabled for them.\r\nretained_contact_host_attribute_mask=0\r\nretained_contact_service_attribute_mask=0\r\n\r\n\r\n\r\n# INTERVAL LENGTH\r\n# This is the seconds per unit interval as used in the\r\n# host/contact/service configuration files.  Setting this to 60 means\r\n# that each interval is one minute long (60 seconds).  Other settings\r\n# have not been tested much, so your mileage is likely to vary...\r\n\r\ninterval_length=60\r\n\r\n\r\n\r\n# CHECK FOR UPDATES\r\n# This option determines whether Nagios will automatically check to\r\n# see if new updates (releases) are available.  It is recommend that you\r\n# enable this option to ensure that you stay on top of the latest critical\r\n# patches to Nagios.  Nagios is critical to you - make sure you keep it in\r\n# good shape.  Nagios will check once a day for new updates. Data collected\r\n# by Nagios Enterprises from the update check is processed in accordance\r\n# with our privacy policy - see https://api.nagios.org for details.\r\n\r\ncheck_for_updates=1\r\n\r\n\r\n\r\n# BARE UPDATE CHECK\r\n# This option determines what data Nagios will send to api.nagios.org when\r\n# it checks for updates.  By default, Nagios will send information on the\r\n# current version of Nagios you have installed, as well as an indicator as\r\n# to whether this was a new installation or not.  Nagios Enterprises uses\r\n# this data to determine the number of users running specific version of\r\n# Nagios.  Enable this option if you do not want this information to be sent.\r\n\r\nbare_update_check=0\r\n\r\n\r\n\r\n# AGGRESSIVE HOST CHECKING OPTION\r\n# If you don't want to turn on aggressive host checking features, set\r\n# this value to 0 (the default).  Otherwise set this value to 1 to\r\n# enable the aggressive check option.  Read the docs for more info\r\n# on what aggressive host check is or check out the source code in\r\n# base/checks.c\r\n\r\nuse_aggressive_host_checking=0\r\n\r\n\r\n\r\n# SERVICE CHECK EXECUTION OPTION\r\n# This determines whether or not Nagios will actively execute\r\n# service checks when it initially starts.  If this option is\r\n# disabled, checks are not actively made, but Nagios can still\r\n# receive and process passive check results that come in.  Unless\r\n# you're implementing redundant hosts or have a special need for\r\n# disabling the execution of service checks, leave this enabled!\r\n# Values: 1 = enable checks, 0 = disable checks\r\n\r\nexecute_service_checks=1\r\n\r\n\r\n\r\n# PASSIVE SERVICE CHECK ACCEPTANCE OPTION\r\n# This determines whether or not Nagios will accept passive\r\n# service checks results when it initially (re)starts.\r\n# Values: 1 = accept passive checks, 0 = reject passive checks\r\n\r\naccept_passive_service_checks=1\r\n\r\n\r\n\r\n# HOST CHECK EXECUTION OPTION\r\n# This determines whether or not Nagios will actively execute\r\n# host checks when it initially starts.  If this option is\r\n# disabled, checks are not actively made, but Nagios can still\r\n# receive and process passive check results that come in.  Unless\r\n# you're implementing redundant hosts or have a special need for\r\n# disabling the execution of host checks, leave this enabled!\r\n# Values: 1 = enable checks, 0 = disable checks\r\n\r\nexecute_host_checks=1\r\n\r\n\r\n\r\n# PASSIVE HOST CHECK ACCEPTANCE OPTION\r\n# This determines whether or not Nagios will accept passive\r\n# host checks results when it initially (re)starts.\r\n# Values: 1 = accept passive checks, 0 = reject passive checks\r\n\r\naccept_passive_host_checks=1\r\n\r\n\r\n\r\n# NOTIFICATIONS OPTION\r\n# This determines whether or not Nagios will sent out any host or\r\n# service notifications when it is initially (re)started.\r\n# Values: 1 = enable notifications, 0 = disable notifications\r\n\r\nenable_notifications=1\r\n\r\n\r\n\r\n# EVENT HANDLER USE OPTION\r\n# This determines whether or not Nagios will run any host or\r\n# service event handlers when it is initially (re)started.  Unless\r\n# you're implementing redundant hosts, leave this option enabled.\r\n# Values: 1 = enable event handlers, 0 = disable event handlers\r\n\r\nenable_event_handlers=1\r\n\r\n\r\n\r\n# PROCESS PERFORMANCE DATA OPTION\r\n# This determines whether or not Nagios will process performance\r\n# data returned from service and host checks.  If this option is\r\n# enabled, host performance data will be processed using the\r\n# host_perfdata_command (defined below) and service performance\r\n# data will be processed using the service_perfdata_command (also\r\n# defined below).  Read the HTML docs for more information on\r\n# performance data.\r\n# Values: 1 = process performance data, 0 = do not process performance data\r\n\r\nprocess_performance_data=0\r\n\r\n\r\n\r\n# HOST AND SERVICE PERFORMANCE DATA PROCESSING COMMANDS\r\n# These commands are run after every host and service check is\r\n# performed.  These commands are executed only if the\r\n# enable_performance_data option (above) is set to 1.  The command\r\n# argument is the short name of a command definition that you\r\n# define in your host configuration file.  Read the HTML docs for\r\n# more information on performance data.\r\n\r\n#host_perfdata_command=process-host-perfdata\r\n#service_perfdata_command=process-service-perfdata\r\n\r\n\r\n\r\n# HOST AND SERVICE PERFORMANCE DATA FILES\r\n# These files are used to store host and service performance data.\r\n# Performance data is only written to these files if the\r\n# enable_performance_data option (above) is set to 1.\r\n\r\n#host_perfdata_file=/usr/local/nagios/var/host-perfdata\r\n#service_perfdata_file=/usr/local/nagios/var/service-perfdata\r\n\r\n\r\n\r\n# HOST AND SERVICE PERFORMANCE DATA FILE TEMPLATES\r\n# These options determine what data is written (and how) to the\r\n# performance data files.  The templates may contain macros, special\r\n# characters (\\t for tab, \\r for carriage return, \\n for newline)\r\n# and plain text.  A newline is automatically added after each write\r\n# to the performance data file.  Some examples of what you can do are\r\n# shown below.\r\n\r\n#host_perfdata_file_template=[HOSTPERFDATA]\\t$TIMET$\\t$HOSTNAME$\\t$HOSTEXECUTIONTIME$\\t$HOSTOUTPUT$\\t$HOSTPERFDATA$\r\n#service_perfdata_file_template=[SERVICEPERFDATA]\\t$TIMET$\\t$HOSTNAME$\\t$SERVICEDESC$\\t$SERVICEEXECUTIONTIME$\\t$SERVICELATENCY$\\t$SERVICEOUTPUT$\\t$SERVICEPERFDATA$\r\n\r\n\r\n\r\n# HOST AND SERVICE PERFORMANCE DATA FILE MODES\r\n# This option determines whether or not the host and service\r\n# performance data files are opened in write (\"w\") or append (\"a\")\r\n# mode. If you want to use named pipes, you should use the special\r\n# pipe (\"p\") mode which avoid blocking at startup, otherwise you will\r\n# likely want the default append (\"a\") mode.\r\n\r\n#host_perfdata_file_mode=a\r\n#service_perfdata_file_mode=a\r\n\r\n\r\n\r\n# HOST AND SERVICE PERFORMANCE DATA FILE PROCESSING INTERVAL\r\n# These options determine how often (in seconds) the host and service\r\n# performance data files are processed using the commands defined\r\n# below.  A value of 0 indicates the files should not be periodically\r\n# processed.\r\n\r\n#host_perfdata_file_processing_interval=0\r\n#service_perfdata_file_processing_interval=0\r\n\r\n\r\n\r\n# HOST AND SERVICE PERFORMANCE DATA FILE PROCESSING COMMANDS\r\n# These commands are used to periodically process the host and\r\n# service performance data files.  The interval at which the\r\n# processing occurs is determined by the options above.\r\n\r\n#host_perfdata_file_processing_command=process-host-perfdata-file\r\n#service_perfdata_file_processing_command=process-service-perfdata-file\r\n\r\n\r\n\r\n# HOST AND SERVICE PERFORMANCE DATA PROCESS EMPTY RESULTS\r\n# These options determine whether the core will process empty perfdata\r\n# results or not. This is needed for distributed monitoring, and intentionally\r\n# turned on by default.\r\n# If you don't require empty perfdata - saving some cpu cycles\r\n# on unwanted macro calculation - you can turn that off. Be careful!\r\n# Values: 1 = enable, 0 = disable\r\n\r\n#host_perfdata_process_empty_results=1\r\n#service_perfdata_process_empty_results=1\r\n\r\n\r\n# OBSESS OVER SERVICE CHECKS OPTION\r\n# This determines whether or not Nagios will obsess over service\r\n# checks and run the ocsp_command defined below.  Unless you're\r\n# planning on implementing distributed monitoring, do not enable\r\n# this option.  Read the HTML docs for more information on\r\n# implementing distributed monitoring.\r\n# Values: 1 = obsess over services, 0 = do not obsess (default)\r\n\r\nobsess_over_services=0\r\n\r\n\r\n\r\n# OBSESSIVE COMPULSIVE SERVICE PROCESSOR COMMAND\r\n# This is the command that is run for every service check that is\r\n# processed by Nagios.  This command is executed only if the\r\n# obsess_over_services option (above) is set to 1.  The command\r\n# argument is the short name of a command definition that you\r\n# define in your host configuration file. Read the HTML docs for\r\n# more information on implementing distributed monitoring.\r\n\r\n#ocsp_command=somecommand\r\n\r\n\r\n\r\n# OBSESS OVER HOST CHECKS OPTION\r\n# This determines whether or not Nagios will obsess over host\r\n# checks and run the ochp_command defined below.  Unless you're\r\n# planning on implementing distributed monitoring, do not enable\r\n# this option.  Read the HTML docs for more information on\r\n# implementing distributed monitoring.\r\n# Values: 1 = obsess over hosts, 0 = do not obsess (default)\r\n\r\nobsess_over_hosts=0\r\n\r\n\r\n\r\n# OBSESSIVE COMPULSIVE HOST PROCESSOR COMMAND\r\n# This is the command that is run for every host check that is\r\n# processed by Nagios.  This command is executed only if the\r\n# obsess_over_hosts option (above) is set to 1.  The command\r\n# argument is the short name of a command definition that you\r\n# define in your host configuration file. Read the HTML docs for\r\n# more information on implementing distributed monitoring.\r\n\r\n#ochp_command=somecommand\r\n\r\n\r\n\r\n# TRANSLATE PASSIVE HOST CHECKS OPTION\r\n# This determines whether or not Nagios will translate\r\n# DOWN/UNREACHABLE passive host check results into their proper\r\n# state for this instance of Nagios.  This option is useful\r\n# if you have distributed or failover monitoring setup.  In\r\n# these cases your other Nagios servers probably have a different\r\n# \"view\" of the network, with regards to the parent/child relationship\r\n# of hosts.  If a distributed monitoring server thinks a host\r\n# is DOWN, it may actually be UNREACHABLE from the point of\r\n# this Nagios instance.  Enabling this option will tell Nagios\r\n# to translate any DOWN or UNREACHABLE host states it receives\r\n# passively into the correct state from the view of this server.\r\n# Values: 1 = perform translation, 0 = do not translate (default)\r\n\r\ntranslate_passive_host_checks=0\r\n\r\n\r\n\r\n# PASSIVE HOST CHECKS ARE SOFT OPTION\r\n# This determines whether or not Nagios will treat passive host\r\n# checks as being HARD or SOFT.  By default, a passive host check\r\n# result will put a host into a HARD state type.  This can be changed\r\n# by enabling this option.\r\n# Values: 0 = passive checks are HARD, 1 = passive checks are SOFT\r\n\r\npassive_host_checks_are_soft=0\r\n\r\n\r\n\r\n# ORPHANED HOST/SERVICE CHECK OPTIONS\r\n# These options determine whether or not Nagios will periodically\r\n# check for orphaned host service checks.  Since service checks are\r\n# not rescheduled until the results of their previous execution\r\n# instance are processed, there exists a possibility that some\r\n# checks may never get rescheduled.  A similar situation exists for\r\n# host checks, although the exact scheduling details differ a bit\r\n# from service checks.  Orphaned checks seem to be a rare\r\n# problem and should not happen under normal circumstances.\r\n# If you have problems with service checks never getting\r\n# rescheduled, make sure you have orphaned service checks enabled.\r\n# Values: 1 = enable checks, 0 = disable checks\r\n\r\ncheck_for_orphaned_services=1\r\ncheck_for_orphaned_hosts=1\r\n\r\n\r\n\r\n# SERVICE FRESHNESS CHECK OPTION\r\n# This option determines whether or not Nagios will periodically\r\n# check the \"freshness\" of service results.  Enabling this option\r\n# is useful for ensuring passive checks are received in a timely\r\n# manner.\r\n# Values: 1 = enabled freshness checking, 0 = disable freshness checking\r\n\r\ncheck_service_freshness=1\r\n\r\n\r\n\r\n# SERVICE FRESHNESS CHECK INTERVAL\r\n# This setting determines how often (in seconds) Nagios will\r\n# check the \"freshness\" of service check results.  If you have\r\n# disabled service freshness checking, this option has no effect.\r\n\r\nservice_freshness_check_interval=60\r\n\r\n\r\n\r\n# SERVICE CHECK TIMEOUT STATE\r\n# This setting determines the state Nagios will report when a\r\n# service check times out - that is does not respond within\r\n# service_check_timeout seconds.  This can be useful if a\r\n# machine is running at too high a load and you do not want\r\n# to consider a failed service check to be critical (the default).\r\n# Valid settings are:\r\n# c - Critical (default)\r\n# u - Unknown\r\n# w - Warning\r\n# o - OK\r\n\r\nservice_check_timeout_state=c\r\n\r\n\r\n\r\n# HOST FRESHNESS CHECK OPTION\r\n# This option determines whether or not Nagios will periodically\r\n# check the \"freshness\" of host results.  Enabling this option\r\n# is useful for ensuring passive checks are received in a timely\r\n# manner.\r\n# Values: 1 = enabled freshness checking, 0 = disable freshness checking\r\n\r\ncheck_host_freshness=0\r\n\r\n\r\n\r\n# HOST FRESHNESS CHECK INTERVAL\r\n# This setting determines how often (in seconds) Nagios will\r\n# check the \"freshness\" of host check results.  If you have\r\n# disabled host freshness checking, this option has no effect.\r\n\r\nhost_freshness_check_interval=60\r\n\r\n\r\n\r\n\r\n# ADDITIONAL FRESHNESS THRESHOLD LATENCY\r\n# This setting determines the number of seconds that Nagios\r\n# will add to any host and service freshness thresholds that\r\n# it calculates (those not explicitly specified by the user).\r\n\r\nadditional_freshness_latency=15\r\n\r\n\r\n\r\n\r\n# FLAP DETECTION OPTION\r\n# This option determines whether or not Nagios will try\r\n# and detect hosts and services that are \"flapping\".\r\n# Flapping occurs when a host or service changes between\r\n# states too frequently.  When Nagios detects that a\r\n# host or service is flapping, it will temporarily suppress\r\n# notifications for that host/service until it stops\r\n# flapping.  Flap detection is very experimental, so read\r\n# the HTML documentation before enabling this feature!\r\n# Values: 1 = enable flap detection\r\n#         0 = disable flap detection (default)\r\n\r\nenable_flap_detection=1\r\n\r\n\r\n\r\n# FLAP DETECTION THRESHOLDS FOR HOSTS AND SERVICES\r\n# Read the HTML documentation on flap detection for\r\n# an explanation of what this option does.  This option\r\n# has no effect if flap detection is disabled.\r\n\r\nlow_service_flap_threshold=5.0\r\nhigh_service_flap_threshold=20.0\r\nlow_host_flap_threshold=5.0\r\nhigh_host_flap_threshold=20.0\r\n\r\n\r\n\r\n# DATE FORMAT OPTION\r\n# This option determines how short dates are displayed. Valid options\r\n# include:\r\n#\tus\t\t(MM-DD-YYYY HH:MM:SS)\r\n#\teuro    \t(DD-MM-YYYY HH:MM:SS)\r\n#\tiso8601\t\t(YYYY-MM-DD HH:MM:SS)\r\n#\tstrict-iso8601\t(YYYY-MM-DDTHH:MM:SS)\r\n#\r\n\r\ndate_format=us\r\n\r\n\r\n\r\n\r\n# TIMEZONE OFFSET\r\n# This option is used to override the default timezone that this\r\n# instance of Nagios runs in.  If not specified, Nagios will use\r\n# the system configured timezone.\r\n#\r\n# NOTE: In order to display the correct timezone in the CGIs, you\r\n# will also need to alter the Apache directives for the CGI path\r\n# to include your timezone.  Example:\r\n#\r\n#   <Directory \"/usr/local/nagios/sbin/\">\r\n#      SetEnv TZ \"Australia/Brisbane\"\r\n#      ...\r\n#   </Directory>\r\n\r\n#use_timezone=US/Mountain\r\n#use_timezone=Australia/Brisbane\r\n\r\n\r\n\r\n# ILLEGAL OBJECT NAME CHARACTERS\r\n# This option allows you to specify illegal characters that cannot\r\n# be used in host names, service descriptions, or names of other\r\n# object types.\r\n\r\nillegal_object_name_chars=`~!$%^&*|'\"<>?,()=\r\n\r\n\r\n\r\n# ILLEGAL MACRO OUTPUT CHARACTERS\r\n# This option allows you to specify illegal characters that are\r\n# stripped from macros before being used in notifications, event\r\n# handlers, etc.  This DOES NOT affect macros used in service or\r\n# host check commands.\r\n# The following macros are stripped of the characters you specify:\r\n#\t$HOSTOUTPUT$\r\n#\t$LONGHOSTOUTPUT$\r\n#\t$HOSTPERFDATA$\r\n#\t$HOSTACKAUTHOR$\r\n#\t$HOSTACKCOMMENT$\r\n#\t$SERVICEOUTPUT$\r\n#\t$LONGSERVICEOUTPUT$\r\n#\t$SERVICEPERFDATA$\r\n#\t$SERVICEACKAUTHOR$\r\n#\t$SERVICEACKCOMMENT$\r\n\r\nillegal_macro_output_chars=`~$&|'\"<>\r\n\r\n\r\n\r\n# REGULAR EXPRESSION MATCHING\r\n# This option controls whether or not regular expression matching\r\n# takes place in the object config files.  Regular expression\r\n# matching is used to match host, hostgroup, service, and service\r\n# group names/descriptions in some fields of various object types.\r\n# Values: 1 = enable regexp matching, 0 = disable regexp matching\r\n\r\nuse_regexp_matching=0\r\n\r\n\r\n\r\n# \"TRUE\" REGULAR EXPRESSION MATCHING\r\n# This option controls whether or not \"true\" regular expression\r\n# matching takes place in the object config files.  This option\r\n# only has an effect if regular expression matching is enabled\r\n# (see above).  If this option is DISABLED, regular expression\r\n# matching only occurs if a string contains wildcard characters\r\n# (* and ?).  If the option is ENABLED, regexp matching occurs\r\n# all the time (which can be annoying).\r\n# Values: 1 = enable true matching, 0 = disable true matching\r\n\r\nuse_true_regexp_matching=0\r\n\r\n\r\n\r\n# ADMINISTRATOR EMAIL/PAGER ADDRESSES\r\n# The email and pager address of a global administrator (likely you).\r\n# Nagios never uses these values itself, but you can access them by\r\n# using the $ADMINEMAIL$ and $ADMINPAGER$ macros in your notification\r\n# commands.\r\n\r\nadmin_email=_Engines_Environment(admin_email)\r\nadmin_pager=_Engines_Environment(admin_pager_email)\r\n\r\n\r\n# DAEMON CORE DUMP OPTION\r\n# This option determines whether or not Nagios is allowed to create\r\n# a core dump when it runs as a daemon.  Note that it is generally\r\n# considered bad form to allow this, but it may be useful for\r\n# debugging purposes.  Enabling this option doesn't guarantee that\r\n# a core file will be produced, but that's just life...\r\n# Values: 1 - Allow core dumps\r\n#         0 - Do not allow core dumps (default)\r\n\r\ndaemon_dumps_core=0\r\n\r\n\r\n\r\n# LARGE INSTALLATION TWEAKS OPTION\r\n# This option determines whether or not Nagios will take some shortcuts\r\n# which can save on memory and CPU usage in large Nagios installations.\r\n# Read the documentation for more information on the benefits/tradeoffs\r\n# of enabling this option.\r\n# Values: 1 - Enabled tweaks\r\n#         0 - Disable tweaks (default)\r\n\r\nuse_large_installation_tweaks=0\r\n\r\n\r\n\r\n# ENABLE ENVIRONMENT MACROS\r\n# This option determines whether or not Nagios will make all standard\r\n# macros available as environment variables when host/service checks\r\n# and system commands (event handlers, notifications, etc.) are\r\n# executed.\r\n# Enabling this is a very bad idea for anything but very small setups,\r\n# as it means plugins, notification scripts and eventhandlers may run\r\n# out of environment space. It will also cause a significant increase\r\n# in CPU- and memory usage and drastically reduce the number of checks\r\n# you can run.\r\n# Values: 1 - Enable environment variable macros\r\n#         0 - Disable environment variable macros (default)\r\n\r\nenable_environment_macros=0\r\n\r\n\r\n\r\n# CHILD PROCESS MEMORY OPTION\r\n# This option determines whether or not Nagios will free memory in\r\n# child processes (processed used to execute system commands and host/\r\n# service checks).  If you specify a value here, it will override\r\n# program defaults.\r\n# Value: 1 - Free memory in child processes\r\n#        0 - Do not free memory in child processes\r\n\r\n#free_child_process_memory=1\r\n\r\n\r\n\r\n# CHILD PROCESS FORKING BEHAVIOR\r\n# This option determines how Nagios will fork child processes\r\n# (used to execute system commands and host/service checks).  Normally\r\n# child processes are fork()ed twice, which provides a very high level\r\n# of isolation from problems.  Fork()ing once is probably enough and will\r\n# save a great deal on CPU usage (in large installs), so you might\r\n# want to consider using this.  If you specify a value here, it will\r\n# program defaults.\r\n# Value: 1 - Child processes fork() twice\r\n#        0 - Child processes fork() just once\r\n\r\n#child_processes_fork_twice=1\r\n\r\n\r\n\r\n# DEBUG LEVEL\r\n# This option determines how much (if any) debugging information will\r\n# be written to the debug file.  OR values together to log multiple\r\n# types of information.\r\n# Values:\r\n#         -1      = Everything\r\n#          0      = Nothing\r\n#          1      = Functions\r\n#          2      = Configuration\r\n#          4      = Process information\r\n#          8      = Scheduled events\r\n#          16     = Host/service checks\r\n#          32     = Notifications\r\n#          64     = Event broker\r\n#          128    = External commands\r\n#          256    = Commands\r\n#          512    = Scheduled downtime\r\n#          1024   = Comments\r\n#          2048   = Macros\r\n#          4096   = Interprocess communication\r\n#          8192   = Scheduling\r\n#          16384  = Workers\r\n\r\ndebug_level=0\r\n\r\n\r\n\r\n# DEBUG VERBOSITY\r\n# This option determines how verbose the debug log out will be.\r\n# Values: 0 = Brief output\r\n#         1 = More detailed\r\n#         2 = Very detailed\r\n\r\ndebug_verbosity=1\r\n\r\n\r\n\r\n# DEBUG FILE\r\n# This option determines where Nagios should write debugging information.\r\n\r\ndebug_file=/usr/local/nagios/var/nagios.debug\r\n\r\n\r\n\r\n# MAX DEBUG FILE SIZE\r\n# This option determines the maximum size (in bytes) of the debug file.  If\r\n# the file grows larger than this size, it will be renamed with a .old\r\n# extension.  If a file already exists with a .old extension it will\r\n# automatically be deleted.  This helps ensure your disk space usage doesn't\r\n# get out of control when debugging Nagios.\r\n\r\nmax_debug_file_size=1000000\r\n\r\n\r\n\r\n# Should we allow hostgroups to have no hosts, we default this to off since\r\n# that was the old behavior\r\n\r\nallow_empty_hostgroup_assignment=0\r\n\r\n\r\n\r\n# Normally worker count is dynamically allocated based on 1.5 * number of cpu's\r\n# with a minimum of 4 workers.  This value will override the defaults\r\n\r\n#check_workers=3\r\n\r\n\r\n\r\n# DISABLE SERVICE CHECKS WHEN HOST DOWN\r\n# This option will disable all service checks if the host is not in an UP state\r\n#\r\n# While desirable in some environments, enabling this value can distort report\r\n# values as the expected quantity of checks will not have been performed\r\n\r\n#host_down_disable_service_checks=0\r\n\r\n\r\n\r\n# SET SERVICE/HOST STATUS WHEN SERVICE CHECK SKIPPED\r\n# These options will allow you to set the status of a service when its\r\n# service check is skipped due to one of three reasons:\r\n# 1) failed dependency check; 2) parent's status; 3) host not up\r\n# Number 3 can only happen if 'host_down_disable_service_checks' above\r\n# is set to 1.\r\n# Valid values for the service* options are:\r\n#     -1     Do not change the service status (default - same as before 4.4)\r\n#      0     Set the service status to STATE_OK\r\n#      1     Set the service status to STATE_WARNING\r\n#      2     Set the service status to STATE_CRITICAL\r\n#      3     Set the service status to STATE_UNKNOWN\r\n# The host_dependency_skip_check_status option will allow you to set the\r\n# status of a host when itscheck is skipped due to a failed dependency check.\r\n# Valid values for the host_dependency_skip_check_status are:\r\n#     -1     Do not change the service status (default - same as before 4.4)\r\n#      0     Set the host status to STATE_UP\r\n#      1     Set the host status to STATE_DOWN\r\n#      2     Set the host status to STATE_UNREACHABLE\r\n# We may add one or more statuses in the future.\r\n\r\n#service_skip_check_dependency_status=-1\r\n#service_skip_check_parent_status=-1\r\n#service_skip_check_host_down_status=-1\r\n#host_skip_check_dependency_status=-1\r\n\r\n\r\n\r\n# LOAD CONTROL OPTIONS\r\n# To get current defaults based on your system, issue this command to\r\n# the query handler:\r\n#    echo -e '@core loadctl\\0' | nc -U /usr/local/nagios/var/rw/nagios.qh\r\n#\r\n# Please note that used incorrectly these options can induce enormous latency.\r\n#\r\n# loadctl_options:\r\n#   jobs_max        The maximum amount of jobs to run at one time\r\n#   jobs_min        The minimum amount of jobs to run at one time\r\n#   jobs_limit      The maximum amount of jobs the current load lets us run\r\n#   backoff_limit   The minimum backoff_change\r\n#   backoff_change  # of jobs to remove from jobs_limit when backing off\r\n#   rampup_limit    Minimum rampup_change\r\n#   rampup_change   # of jobs to add to jobs_limit when ramping up\r\n\r\n#loadctl_options=jobs_max=100;backoff_limit=10;rampup_change=5\r\n"
      },
      {
        "path": "/home/fs_src/etc/cgi.cfg",
        "language": "text",
        "content": "#################################################################\r\n#\r\n# CGI.CFG - Sample CGI Configuration File for Nagios 4.4.2\r\n#\r\n#\r\n#################################################################\r\n\r\n\r\n# MAIN CONFIGURATION FILE\r\n# This tells the CGIs where to find your main configuration file.\r\n# The CGIs will read the main and host config files for any other\r\n# data they might need.\r\n\r\nmain_config_file=/usr/local/nagios/etc/nagios.cfg\r\n\r\n\r\n\r\n# PHYSICAL HTML PATH\r\n# This is the path where the HTML files for Nagios reside.  This\r\n# value is used to locate the logo images needed by the statusmap\r\n# and statuswrl CGIs.\r\n\r\nphysical_html_path=/usr/local/nagios/share\r\n\r\n\r\n\r\n# URL HTML PATH\r\n# This is the path portion of the URL that corresponds to the\r\n# physical location of the Nagios HTML files (as defined above).\r\n# This value is used by the CGIs to locate the online documentation\r\n# and graphics.  If you access the Nagios pages with an URL like\r\n# http://www.myhost.com/nagios, this value should be '/nagios'\r\n# (without the quotes).\r\n\r\nurl_html_path=/nagios\r\n\r\n\r\n\r\n# CONTEXT-SENSITIVE HELP\r\n# This option determines whether or not a context-sensitive\r\n# help icon will be displayed for most of the CGIs.\r\n# Values: 0 = disables context-sensitive help\r\n#         1 = enables context-sensitive help\r\n\r\nshow_context_help=0\r\n\r\n\r\n\r\n# PENDING STATES OPTION\r\n# This option determines what states should be displayed in the web\r\n# interface for hosts/services that have not yet been checked.\r\n# Values: 0 = leave hosts/services that have not been check yet in their original state\r\n#         1 = mark hosts/services that have not been checked yet as PENDING\r\n\r\nuse_pending_states=1\r\n\r\n\r\n\r\n# AUTHENTICATION USAGE\r\n# This option controls whether or not the CGIs will use any\r\n# authentication when displaying host and service information, as\r\n# well as committing commands to Nagios for processing.\r\n#\r\n# Read the HTML documentation to learn how the authorization works!\r\n#\r\n# NOTE: It is a really *bad* idea to disable authorization, unless\r\n# you plan on removing the command CGI (cmd.cgi)!  Failure to do\r\n# so will leave you wide open to kiddies messing with Nagios and\r\n# possibly hitting you with a denial of service attack by filling up\r\n# your drive by continuously writing to your command file!\r\n#\r\n# Setting this value to 0 will cause the CGIs to *not* use\r\n# authentication (bad idea), while any other value will make them\r\n# use the authentication functions (the default).\r\n\r\nuse_authentication=1\r\n\r\n\r\n\r\n# x509 CERT AUTHENTICATION\r\n# When enabled, this option allows you to use x509 cert (SSL)\r\n# authentication in the CGIs.  This is an advanced option and should\r\n# not be enabled unless you know what you're doing.\r\n\r\nuse_ssl_authentication=0\r\n\r\n\r\n\r\n# DEFAULT USER\r\n# Setting this variable will define a default user name that can\r\n# access pages without authentication.  This allows people within a\r\n# secure domain (i.e., behind a firewall) to see the current status\r\n# without authenticating.  You may want to use this to avoid basic\r\n# authentication if you are not using a secure server since basic\r\n# authentication transmits passwords in the clear.\r\n#\r\n# Important:  Do not define a default username unless you are\r\n# running a secure web server and are sure that everyone who has\r\n# access to the CGIs has been authenticated in some manner!  If you\r\n# define this variable, anyone who has not authenticated to the web\r\n# server will inherit all rights you assign to this user!\r\n\r\n#default_user_name=guest\r\n\r\n\r\n\r\n# SYSTEM/PROCESS INFORMATION ACCESS\r\n# This option is a comma-delimited list of all usernames that\r\n# have access to viewing the Nagios process information as\r\n# provided by the Extended Information CGI (extinfo.cgi).  By\r\n# default, *no one* has access to this unless you choose to\r\n# not use authorization.  You may use an asterisk (*) to\r\n# authorize any user who has authenticated to the web server.\r\n\r\nauthorized_for_system_information=nagiosadmin\r\n\r\n\r\n\r\n# CONFIGURATION INFORMATION ACCESS\r\n# This option is a comma-delimited list of all usernames that\r\n# can view ALL configuration information (hosts, commands, etc).\r\n# By default, users can only view configuration information\r\n# for the hosts and services they are contacts for. You may use\r\n# an asterisk (*) to authorize any user who has authenticated\r\n# to the web server.\r\n\r\nauthorized_for_configuration_information=nagiosadmin\r\n\r\n\r\n\r\n# SYSTEM/PROCESS COMMAND ACCESS\r\n# This option is a comma-delimited list of all usernames that\r\n# can issue shutdown and restart commands to Nagios via the\r\n# command CGI (cmd.cgi).  Users in this list can also change\r\n# the program mode to active or standby. By default, *no one*\r\n# has access to this unless you choose to not use authorization.\r\n# You may use an asterisk (*) to authorize any user who has\r\n# authenticated to the web server.\r\n\r\nauthorized_for_system_commands=nagiosadmin\r\n\r\n\r\n\r\n# GLOBAL HOST/SERVICE VIEW ACCESS\r\n# These two options are comma-delimited lists of all usernames that\r\n# can view information for all hosts and services that are being\r\n# monitored.  By default, users can only view information\r\n# for hosts or services that they are contacts for (unless you\r\n# you choose to not use authorization). You may use an asterisk (*)\r\n# to authorize any user who has authenticated to the web server.\r\n\r\nauthorized_for_all_services=nagiosadmin\r\nauthorized_for_all_hosts=nagiosadmin\r\n\r\n\r\n\r\n# GLOBAL HOST/SERVICE COMMAND ACCESS\r\n# These two options are comma-delimited lists of all usernames that\r\n# can issue host or service related commands via the command\r\n# CGI (cmd.cgi) for all hosts and services that are being monitored.\r\n# By default, users can only issue commands for hosts or services\r\n# that they are contacts for (unless you you choose to not use\r\n# authorization).  You may use an asterisk (*) to authorize any\r\n# user who has authenticated to the web server.\r\n\r\nauthorized_for_all_service_commands=nagiosadmin\r\nauthorized_for_all_host_commands=nagiosadmin\r\n\r\n\r\n\r\n# READ-ONLY USERS\r\n# A comma-delimited list of usernames that have read-only rights in\r\n# the CGIs.  This will block any service or host commands normally shown\r\n# on the extinfo CGI pages.  It will also block comments from being shown\r\n# to read-only users.\r\n\r\n#authorized_for_read_only=user1,user2\r\n\r\n\r\n\r\n# STATUSMAP BACKGROUND IMAGE\r\n# This option allows you to specify an image to be used as a\r\n# background in the statusmap CGI.  It is assumed that the image\r\n# resides in the HTML images path (i.e. /usr/local/nagios/share/images).\r\n# This path is automatically determined by appending \"/images\"\r\n# to the path specified by the 'physical_html_path' directive.\r\n# Note:  The image file may be in GIF, PNG, JPEG, or GD2 format.\r\n# However, I recommend that you convert your image to GD2 format\r\n# (uncompressed) but ONLY IF YOU WILL USE THE LEGACY MAP EXCLUSIVELY,\r\n# as this will cause less CPU load when the CGI generates the image.\r\n\r\n#statusmap_background_image=smbackground.gd2\r\n\r\n\r\n\r\n# STATUSMAP TRANSPARENCY INDEX COLOR\r\n# These options set the r,g,b values of the background color used the statusmap CGI,\r\n# so normal browsers that can't show real png transparency set the desired color as\r\n# a background color instead (to make it look pretty).\r\n# Defaults to white: (R,G,B) = (255,255,255).\r\n\r\n#color_transparency_index_r=255\r\n#color_transparency_index_g=255\r\n#color_transparency_index_b=255\r\n\r\n\r\n\r\n# DEFAULT STATUSMAP LAYOUT METHOD\r\n# This option allows you to specify the default layout method\r\n# the statusmap CGI should use for drawing hosts.  If you do\r\n# not use this option, the default for the legacy map is to use\r\n# user-defined coordinates and the default for the new map is \"6\"\r\n# (Circular Balloon).\r\n# Valid options for the legacy map are as follows:\r\n#\t0 = User-defined coordinates\r\n#\t1 = Depth layers\r\n#\t2 = Collapsed tree\r\n#\t3 = Balanced tree\r\n#\t4 = Circular\r\n#\t5 = Circular (Marked Up)\r\n# Valid options for the new map are as follows:\r\n#\t0 = User-defined coordinates\r\n#\t1 = Depth Layers (Horizontal)\r\n#\t2 = Collapsed tree (Horizontal)\r\n#\t3 = Balanced tree (Horizontal)\r\n#\t4 = DON'T USE\r\n#\t5 = Circular Markup\r\n#\t6 = Circular Balloon\r\n#\t7 = Balanced tree (Vertical)\r\n#\t8 = Collapsed tree (Vertical)\r\n#\t9 = Depth Layers (Vertical)\r\n#\t10 = Force Map\r\n\r\n#default_statusmap_layout=6\r\n\r\n\r\n\r\n# DEFAULT STATUSWRL LAYOUT METHOD\r\n# This option allows you to specify the default layout method\r\n# the statuswrl (VRML) CGI should use for drawing hosts.  If you\r\n# do not use this option, the default is to use user-defined\r\n# coordinates.  Valid options are as follows:\r\n#\t0 = User-defined coordinates\r\n#       2 = Collapsed tree\r\n#       3 = Balanced tree\r\n#       4 = Circular\r\n\r\ndefault_statuswrl_layout=4\r\n\r\n\r\n\r\n# STATUSWRL INCLUDE\r\n# This option allows you to include your own objects in the\r\n# generated VRML world.  It is assumed that the file\r\n# resides in the HTML path (i.e. /usr/local/nagios/share).\r\n\r\n#statuswrl_include=myworld.wrl\r\n\r\n\r\n\r\n# PING SYNTAX\r\n# This option determines what syntax should be used when\r\n# attempting to ping a host from the WAP interface (using\r\n# the statuswml CGI.  You must include the full path to\r\n# the ping binary, along with all required options.  The\r\n# $HOSTADDRESS$ macro is substituted with the address of\r\n# the host before the command is executed.\r\n# Please note that the syntax for the ping binary is\r\n# notorious for being different on virtually ever *NIX\r\n# OS and distribution, so you may have to tweak this to\r\n# work on your system.\r\n\r\nping_syntax=/bin/ping -n -U -c 5 $HOSTADDRESS$\r\n\r\n\r\n\r\n# REFRESH RATE\r\n# This option allows you to specify the refresh rate in seconds\r\n# of various CGIs (status, statusmap, extinfo, and outages).\r\n\r\nrefresh_rate=90\r\n\r\n\r\n\r\n# PAGE TOUR\r\n# Enable page tour for helpful tips and tricks on various pages\r\n\r\n#enable_page_tour=1\r\n\r\n\r\n\r\n# DEFAULT PAGE LIMIT\r\n# This option allows you to specify the default number of results\r\n# displayed on the status.cgi.  This number can be adjusted from\r\n# within the UI after the initial page load. Setting this to 0\r\n# will show all results.\r\n\r\nresult_limit=100\r\n\r\n\r\n\r\n# ESCAPE HTML TAGS\r\n# This option determines whether HTML tags in host and service\r\n# status output is escaped in the web interface.  If enabled,\r\n# your plugin output will not be able to contain clickable links.\r\n\r\nescape_html_tags=1\r\n\r\n\r\n\r\n# SOUND OPTIONS\r\n# These options allow you to specify an optional audio file\r\n# that should be played in your browser window when there are\r\n# problems on the network.  The audio files are used only in\r\n# the status CGI.  Only the sound for the most critical problem\r\n# will be played.  Order of importance (higher to lower) is as\r\n# follows: unreachable hosts, down hosts, critical services,\r\n# warning services, and unknown services. If there are no\r\n# visible problems, the sound file optionally specified by\r\n# 'normal_sound' variable will be played.\r\n#\r\n#\r\n# <varname>=<sound_file>\r\n#\r\n# Note: All audio files must be placed in the /media subdirectory\r\n# under the HTML path (i.e. /usr/local/nagios/share/media/).\r\n\r\n#host_unreachable_sound=hostdown.wav\r\n#host_down_sound=hostdown.wav\r\n#service_critical_sound=critical.wav\r\n#service_warning_sound=warning.wav\r\n#service_unknown_sound=warning.wav\r\n#normal_sound=noproblem.wav\r\n\r\n\r\n\r\n# URL TARGET FRAMES\r\n# These options determine the target frames in which notes and\r\n# action URLs will open.\r\n\r\naction_url_target=_blank\r\nnotes_url_target=_blank\r\n\r\n\r\n\r\n# LOCK AUTHOR NAMES OPTION\r\n# This option determines whether users can change the author name\r\n# when submitting comments, scheduling downtime.  If disabled, the\r\n# author names will be locked into their contact name, as defined in Nagios.\r\n# Values: 0 = allow editing author names\r\n#         1 = lock author names (disallow editing)\r\n\r\nlock_author_names=1\r\n\r\n\r\n\r\n# SPLUNK INTEGRATION OPTIONS\r\n# These options allow you to enable integration with Splunk\r\n# in the web interface.  If enabled, you'll be presented with\r\n# \"Splunk It\" links in various places in the CGIs (log file,\r\n# alert history, host/service detail, etc).  Useful if you're\r\n# trying to research why a particular problem occurred.\r\n# For more information on Splunk, visit http://www.splunk.com/\r\n\r\n# This option determines whether the Splunk integration is enabled\r\n# Values: 0 = disable Splunk integration\r\n#         1 = enable Splunk integration\r\n\r\n#enable_splunk_integration=1\r\n\r\n# This option should be the URL used to access your instance of Splunk\r\n#splunk_url=http://127.0.0.1:8000/\r\n\r\n\r\n\r\n# NAVIGATION BAR SEARCH OPTIONS\r\n# The following options allow to configure the navbar search. Default\r\n# is to search for hostnames. With enabled navbar_search_for_addresses,\r\n# the navbar search queries IP addresses as well. It's also possible\r\n# to enable search for aliases by setting navbar_search_for_aliases=1.\r\n\r\nnavbar_search_for_addresses=1\r\nnavbar_search_for_aliases=1\r\n\r\n\r\n\r\n# DEFAULTS FOR CHECKBOXES FOR ACKNOWLEDGEMENTS\r\n# Enabling ack_no_sticky will default the \"Sticky Acknowledgement\" to\r\n# be unchecked.\r\n# Enabling ack_no_send will default the \"Send Notification\" to\r\n# be unchecked.\r\n\r\n#ack_no_sticky=0\r\n#ack_no_send=0\r\n\r\n\r\n\r\n# SHOW ONLY HARD STATES IS TACTICAL OVERVIEW\r\n# This option controls whether only HARD states are counted on the\r\n# Tactical Overview, or if both HARD and SOFT states are counted.\r\n# Set to 1 to show only HARD states. Defaults to 0 (HARD+SOFT).\r\n\r\n#tac_cgi_hard_only=0\r\n\r\n\r\n\r\n# COMMAND COMMENTS\r\n# These options control whether or not comments are required, optional,\r\n# or not allowed for specific commands. The format for each line is:\r\n#    cmd-name=req,def-comment\r\n#\r\n#    cmd-name     is \"CMT_\" plus a command such as ADD_HOST_COMMENT\r\n#    req          0 = not allowed, 1 = optional, 2 = required\r\n#    def-comment  optional default comment that will be put in the input field\r\n#\r\n# The following examples override the default comment requirements in\r\n# some way.\r\n\r\n#CMT_ADD_HOST_COMMENT=1\r\n#CMT_ACKNOWLEDGE_HOST_PROBLEM=2,\"Problem is being looked into\"\r\n#CMT_SCHEDULE_SVC_CHECK=1\r\n#CMT_SCHEDULE_HOST_DOWNTIME=0\r\n"
      },
      {
        "path": "/home/fs_src/etc/resource.cfg ",
        "content": "###########################################################################\r\n#\r\n# RESOURCE.CFG - Sample Resource File for Nagios 4.4.2\r\n#\r\n#\r\n# You can define $USERx$ macros in this file, which can in turn be used\r\n# in command definitions in your host config file(s).  $USERx$ macros are\r\n# useful for storing sensitive information such as usernames, passwords,\r\n# etc.  They are also handy for specifying the path to plugins and\r\n# event handlers - if you decide to move the plugins or event handlers to\r\n# a different directory in the future, you can just update one or two\r\n# $USERx$ macros, instead of modifying a lot of command definitions.\r\n#\r\n# The CGIs will not attempt to read the contents of resource files, so\r\n# you can set restrictive permissions (600 or 660) on them.\r\n#\r\n# Nagios supports up to 256 $USERx$ macros ($USER1$ through $USER256$)\r\n#\r\n# Resource files may also be used to store configuration directives for\r\n# external data sources like MySQL...\r\n#\r\n###########################################################################\r\n\r\n# Sets $USER1$ to be the path to the plugins\r\n$USER1$=/usr/local/nagios/libexec\r\n\r\n# Sets $USER2$ to be the path to event handlers\r\n#$USER2$=/usr/local/nagios/libexec/eventhandlers\r\n\r\n# Store some usernames and passwords (hidden from the CGIs)\r\n#$USER3$=someuser\r\n#$USER4$=somepassword"
      },
      {
        "path": "/home/fs_src/etc/objects/commands.cfg",
        "content": "###############################################################################\r\n# COMMANDS.CFG - SAMPLE COMMAND DEFINITIONS FOR NAGIOS 4.4.2\r\n#\r\n#\r\n# NOTES: This config file provides you with some example command definitions\r\n#        that you can reference in host, service, and contact definitions.\r\n#\r\n#        You don't need to keep commands in a separate file from your other\r\n#        object definitions.  This has been done just to make things easier to\r\n#        understand.\r\n#\r\n###############################################################################\r\n\r\n\r\n\r\n################################################################################\r\n#\r\n# SAMPLE NOTIFICATION COMMANDS\r\n#\r\n# These are some example notification commands.  They may or may not work on\r\n# your system without modification.  As an example, some systems will require\r\n# you to use \"/usr/bin/mailx\" instead of \"/usr/bin/mail\" in the commands below.\r\n#\r\n################################################################################\r\n\r\ndefine command {\r\n\r\n    command_name    notify-host-by-email\r\n    command_line    /usr/bin/printf \"%b\" \"***** Nagios *****\\n\\nNotification Type: $NOTIFICATIONTYPE$\\nHost: $HOSTNAME$\\nState: $HOSTSTATE$\\nAddress: $HOSTADDRESS$\\nInfo: $HOSTOUTPUT$\\n\\nDate/Time: $LONGDATETIME$\\n\" | /usr/sbin/sendmail -s \"** $NOTIFICATIONTYPE$ Host Alert: $HOSTNAME$ is $HOSTSTATE$ **\" $CONTACTEMAIL$\r\n}\r\n\r\n\r\n\r\ndefine command {\r\n\r\n    command_name    notify-service-by-email\r\n    command_line    /usr/bin/printf \"%b\" \"***** Nagios *****\\n\\nNotification Type: $NOTIFICATIONTYPE$\\n\\nService: $SERVICEDESC$\\nHost: $HOSTALIAS$\\nAddress: $HOSTADDRESS$\\nState: $SERVICESTATE$\\n\\nDate/Time: $LONGDATETIME$\\n\\nAdditional Info:\\n\\n$SERVICEOUTPUT$\\n\" | /usr/sbin/sendmail -s \"** $NOTIFICATIONTYPE$ Service Alert: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$ **\" $CONTACTEMAIL$\r\n}\r\n\r\n\r\n\r\n################################################################################\r\n#\r\n# SAMPLE HOST CHECK COMMANDS\r\n#\r\n################################################################################\r\n\r\n# This command checks to see if a host is \"alive\" by pinging it\r\n# The check must result in a 100% packet loss or 5 second (5000ms) round trip\r\n# average time to produce a critical error.\r\n# Note: Five ICMP echo packets are sent (determined by the '-p 5' argument)\r\n\r\ndefine command {\r\n\r\n    command_name    check-host-alive\r\n    command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w 3000.0,80% -c 5000.0,100% -p 5\r\n}\r\n\r\n\r\n\r\n################################################################################\r\n#\r\n# SAMPLE SERVICE CHECK COMMANDS\r\n#\r\n# These are some example service check commands.  They may or may not work on\r\n# your system, as they must be modified for your plugins.  See the HTML\r\n# documentation on the plugins for examples of how to configure command definitions.\r\n#\r\n# NOTE:  The following 'check_local_...' functions are designed to monitor\r\n#        various metrics on the host that Nagios is running on (i.e. this one).\r\n################################################################################\r\n\r\ndefine command {\r\n\r\n    command_name    check_local_disk\r\n    command_line    $USER1$/check_disk -w $ARG1$ -c $ARG2$ -p $ARG3$\r\n}\r\n\r\n\r\n\r\ndefine command {\r\n\r\n    command_name    check_local_load\r\n    command_line    $USER1$/check_load -w $ARG1$ -c $ARG2$\r\n}\r\n\r\n\r\n\r\ndefine command {\r\n\r\n    command_name    check_local_procs\r\n    command_line    $USER1$/check_procs -w $ARG1$ -c $ARG2$ -s $ARG3$\r\n}\r\n\r\n\r\n\r\ndefine command {\r\n\r\n    command_name    check_local_users\r\n    command_line    $USER1$/check_users -w $ARG1$ -c $ARG2$\r\n}\r\n\r\n\r\n\r\ndefine command {\r\n\r\n    command_name    check_local_swap\r\n    command_line    $USER1$/check_swap -w $ARG1$ -c $ARG2$\r\n}\r\n\r\n\r\n\r\ndefine command {\r\n\r\n    command_name    check_local_mrtgtraf\r\n    command_line    $USER1$/check_mrtgtraf -F $ARG1$ -a $ARG2$ -w $ARG3$ -c $ARG4$ -e $ARG5$\r\n}\r\n\r\n\r\n\r\n################################################################################\r\n# NOTE:  The following 'check_...' commands are used to monitor services on\r\n#        both local and remote hosts.\r\n################################################################################\r\n\r\ndefine command {\r\n\r\n    command_name    check_ftp\r\n    command_line    $USER1$/check_ftp -H $HOSTADDRESS$ $ARG1$\r\n}\r\n\r\n\r\n\r\ndefine command {\r\n\r\n    command_name    check_hpjd\r\n    command_line    $USER1$/check_hpjd -H $HOSTADDRESS$ $ARG1$\r\n}\r\n\r\n\r\n\r\ndefine command {\r\n\r\n    command_name    check_snmp\r\n    command_line    $USER1$/check_snmp -H $HOSTADDRESS$ $ARG1$\r\n}\r\n\r\n\r\n\r\ndefine command {\r\n\r\n    command_name    check_http\r\n    command_line    $USER1$/check_http -I $HOSTADDRESS$ $ARG1$\r\n}\r\n\r\n\r\n\r\ndefine command {\r\n\r\n    command_name    check_ssh\r\n    command_line    $USER1$/check_ssh $ARG1$ $HOSTADDRESS$\r\n}\r\n\r\n\r\n\r\ndefine command {\r\n\r\n    command_name    check_dhcp\r\n    command_line    $USER1$/check_dhcp $ARG1$\r\n}\r\n\r\n\r\n\r\ndefine command {\r\n\r\n    command_name    check_ping\r\n    command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w $ARG1$ -c $ARG2$ -p 5\r\n}\r\n\r\n\r\n\r\ndefine command {\r\n\r\n    command_name    check_pop\r\n    command_line    $USER1$/check_pop -H $HOSTADDRESS$ $ARG1$\r\n}\r\n\r\n\r\n\r\ndefine command {\r\n\r\n    command_name    check_imap\r\n    command_line    $USER1$/check_imap -H $HOSTADDRESS$ $ARG1$\r\n}\r\n\r\n\r\n\r\ndefine command {\r\n\r\n    command_name    check_smtp\r\n    command_line    $USER1$/check_smtp -H $HOSTADDRESS$ $ARG1$\r\n}\r\n\r\n\r\n\r\ndefine command {\r\n\r\n    command_name    check_tcp\r\n    command_line    $USER1$/check_tcp -H $HOSTADDRESS$ -p $ARG1$ $ARG2$\r\n}\r\n\r\n\r\n\r\ndefine command {\r\n\r\n    command_name    check_udp\r\n    command_line    $USER1$/check_udp -H $HOSTADDRESS$ -p $ARG1$ $ARG2$\r\n}\r\n\r\n\r\n\r\ndefine command {\r\n\r\n    command_name    check_nt\r\n    command_line    $USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -v $ARG1$ $ARG2$\r\n}\r\n\r\n\r\n\r\n################################################################################\r\n#\r\n# SAMPLE PERFORMANCE DATA COMMANDS\r\n#\r\n# These are sample performance data commands that can be used to send performance\r\n# data output to two text files (one for hosts, another for services).  If you\r\n# plan on simply writing performance data out to a file, consider using the\r\n# host_perfdata_file and service_perfdata_file options in the main config file.\r\n#\r\n################################################################################\r\n\r\ndefine command {\r\n\r\n    command_name    process-host-perfdata\r\n    command_line    /usr/bin/printf \"%b\" \"$LASTHOSTCHECK$\\t$HOSTNAME$\\t$HOSTSTATE$\\t$HOSTATTEMPT$\\t$HOSTSTATETYPE$\\t$HOSTEXECUTIONTIME$\\t$HOSTOUTPUT$\\t$HOSTPERFDATA$\\n\" >> /usr/local/nagios/var/host-perfdata.out\r\n}\r\n\r\n\r\n\r\ndefine command {\r\n\r\n    command_name    process-service-perfdata\r\n    command_line    /usr/bin/printf \"%b\" \"$LASTSERVICECHECK$\\t$HOSTNAME$\\t$SERVICEDESC$\\t$SERVICESTATE$\\t$SERVICEATTEMPT$\\t$SERVICESTATETYPE$\\t$SERVICEEXECUTIONTIME$\\t$SERVICELATENCY$\\t$SERVICEOUTPUT$\\t$SERVICEPERFDATA$\\n\" >> /usr/local/nagios/var/service-perfdata.out\r\n}\r\n"
      },
      {
        "path": "/home/fs_src/etc/objects/contacts.cfg",
        "language": "text",
        "content": "###############################################################################\r\n# CONTACTS.CFG - SAMPLE CONTACT/CONTACTGROUP DEFINITIONS\r\n#\r\n#\r\n# NOTES: This config file provides you with some example contact and contact\r\n#        group definitions that you can reference in host and service\r\n#        definitions.\r\n#\r\n#        You don't need to keep these definitions in a separate file from your\r\n#        other object definitions.  This has been done just to make things\r\n#        easier to understand.\r\n#\r\n###############################################################################\r\n\r\n\r\n\r\n###############################################################################\r\n#\r\n# CONTACTS\r\n#\r\n###############################################################################\r\n\r\n# Just one contact defined by default - the Nagios admin (that's you)\r\n# This contact definition inherits a lot of default values from the\r\n# 'generic-contact' template which is defined elsewhere.\r\n\r\ndefine contact {\r\n\r\n    contact_name            nagiosadmin             ; Short name of user\r\n    use                     generic-contact         ; Inherit default values from generic-contact template (defined above)\r\n    alias                   Nagios Admin            ; Full name of user\r\n    email                   _EnginesEnvironment(admin_email) ; <<***** CHANGE THIS TO YOUR EMAIL ADDRESS ******\r\n}\r\n\r\n\r\n\r\n###############################################################################\r\n#\r\n# CONTACT GROUPS\r\n#\r\n###############################################################################\r\n\r\n# We only have one contact in this simple configuration file, so there is\r\n# no need to create more than one contact group.\r\n\r\ndefine contactgroup {\r\n\r\n    contactgroup_name       admins\r\n    alias                   Nagios Administrators\r\n    members                 nagiosadmin\r\n}\r\n"
      },
      {
        "path": "/home/fs_src/etc/objects/templates.cfg",
        "language": "text",
        "content": "###############################################################################\r\n# TEMPLATES.CFG - SAMPLE OBJECT TEMPLATES\r\n#\r\n#\r\n# NOTES: This config file provides you with some example object definition\r\n#        templates that are referred by other host, service, contact, etc.\r\n#        definitions in other config files.\r\n#\r\n#        You don't need to keep these definitions in a separate file from your\r\n#        other object definitions.  This has been done just to make things\r\n#        easier to understand.\r\n#\r\n###############################################################################\r\n\r\n\r\n\r\n###############################################################################\r\n#\r\n# CONTACT TEMPLATES\r\n#\r\n###############################################################################\r\n\r\n# Generic contact definition template\r\n# This is NOT a real contact, just a template!\r\n\r\ndefine contact {\r\n\r\n    name                            generic-contact         ; The name of this contact template\r\n    service_notification_period     24x7                    ; service notifications can be sent anytime\r\n    host_notification_period        24x7                    ; host notifications can be sent anytime\r\n    service_notification_options    w,u,c,r,f,s             ; send notifications for all service states, flapping events, and scheduled downtime events\r\n    host_notification_options       d,u,r,f,s               ; send notifications for all host states, flapping events, and scheduled downtime events\r\n    service_notification_commands   notify-service-by-email ; send service notifications via email\r\n    host_notification_commands      notify-host-by-email    ; send host notifications via email\r\n    register                        0                       ; DON'T REGISTER THIS DEFINITION - ITS NOT A REAL CONTACT, JUST A TEMPLATE!\r\n}\r\n\r\n\r\n\r\n###############################################################################\r\n#\r\n# HOST TEMPLATES\r\n#\r\n###############################################################################\r\n\r\n# Generic host definition template \r\n# This is NOT a real host, just a template!\r\n\r\ndefine host {\r\n\r\n    name                            generic-host            ; The name of this host template\r\n    notifications_enabled           1                       ; Host notifications are enabled\r\n    event_handler_enabled           1                       ; Host event handler is enabled\r\n    flap_detection_enabled          1                       ; Flap detection is enabled\r\n    process_perf_data               1                       ; Process performance data\r\n    retain_status_information       1                       ; Retain status information across program restarts\r\n    retain_nonstatus_information    1                       ; Retain non-status information across program restarts\r\n    notification_period             24x7                    ; Send host notifications at any time\r\n    register                        0                       ; DON'T REGISTER THIS DEFINITION - ITS NOT A REAL HOST, JUST A TEMPLATE!\r\n}\r\n\r\n\r\n\r\n# Linux host definition template\r\n# This is NOT a real host, just a template!\r\n\r\ndefine host {\r\n\r\n    name                            linux-server            ; The name of this host template\r\n    use                             generic-host            ; This template inherits other values from the generic-host template\r\n    check_period                    24x7                    ; By default, Linux hosts are checked round the clock\r\n    check_interval                  5                       ; Actively check the host every 5 minutes\r\n    retry_interval                  1                       ; Schedule host check retries at 1 minute intervals\r\n    max_check_attempts              10                      ; Check each Linux host 10 times (max)\r\n    check_command                   check-host-alive        ; Default command to check Linux hosts\r\n    notification_period             workhours               ; Linux admins hate to be woken up, so we only notify during the day\r\n                                                            ; Note that the notification_period variable is being overridden from\r\n                                                            ; the value that is inherited from the generic-host template!\r\n    notification_interval           120                     ; Resend notifications every 2 hours\r\n    notification_options            d,u,r                   ; Only send notifications for specific host states\r\n    contact_groups                  admins                  ; Notifications get sent to the admins by default\r\n    register                        0                       ; DON'T REGISTER THIS DEFINITION - ITS NOT A REAL HOST, JUST A TEMPLATE!\r\n}\r\n\r\n\r\n\r\n\r\n# Windows host definition template\r\n# This is NOT a real host, just a template!\r\n\r\ndefine host {\r\n\r\n    name                            windows-server          ; The name of this host template\r\n    use                             generic-host            ; Inherit default values from the generic-host template\r\n    check_period                    24x7                    ; By default, Windows servers are monitored round the clock\r\n    check_interval                  5                       ; Actively check the server every 5 minutes\r\n    retry_interval                  1                       ; Schedule host check retries at 1 minute intervals\r\n    max_check_attempts              10                      ; Check each server 10 times (max)\r\n    check_command                   check-host-alive        ; Default command to check if servers are \"alive\"\r\n    notification_period             24x7                    ; Send notification out at any time - day or night\r\n    notification_interval           30                      ; Resend notifications every 30 minutes\r\n    notification_options            d,r                     ; Only send notifications for specific host states\r\n    contact_groups                  admins                  ; Notifications get sent to the admins by default\r\n    hostgroups                      windows-servers         ; Host groups that Windows servers should be a member of\r\n    register                        0                       ; DON'T REGISTER THIS - ITS JUST A TEMPLATE\r\n}\r\n\r\n\r\n\r\n# We define a generic printer template that can\r\n# be used for most printers we monitor\r\n\r\ndefine host {\r\n\r\n    name                            generic-printer         ; The name of this host template\r\n    use                             generic-host            ; Inherit default values from the generic-host template\r\n    check_period                    24x7                    ; By default, printers are monitored round the clock\r\n    check_interval                  5                       ; Actively check the printer every 5 minutes\r\n    retry_interval                  1                       ; Schedule host check retries at 1 minute intervals\r\n    max_check_attempts              10                      ; Check each printer 10 times (max)\r\n    check_command                   check-host-alive        ; Default command to check if printers are \"alive\"\r\n    notification_period             workhours               ; Printers are only used during the workday\r\n    notification_interval           30                      ; Resend notifications every 30 minutes\r\n    notification_options            d,r                     ; Only send notifications for specific host states\r\n    contact_groups                  admins                  ; Notifications get sent to the admins by default\r\n    register                        0                       ; DON'T REGISTER THIS - ITS JUST A TEMPLATE\r\n}\r\n\r\n\r\n\r\n# Define a template for switches that we can reuse\r\ndefine host {\r\n\r\n    name                            generic-switch          ; The name of this host template\r\n    use                             generic-host            ; Inherit default values from the generic-host template\r\n    check_period                    24x7                    ; By default, switches are monitored round the clock\r\n    check_interval                  5                       ; Switches are checked every 5 minutes\r\n    retry_interval                  1                       ; Schedule host check retries at 1 minute intervals\r\n    max_check_attempts              10                      ; Check each switch 10 times (max)\r\n    check_command                   check-host-alive        ; Default command to check if routers are \"alive\"\r\n    notification_period             24x7                    ; Send notifications at any time\r\n    notification_interval           30                      ; Resend notifications every 30 minutes\r\n    notification_options            d,r                     ; Only send notifications for specific host states\r\n    contact_groups                  admins                  ; Notifications get sent to the admins by default\r\n    register                        0                       ; DON'T REGISTER THIS - ITS JUST A TEMPLATE\r\n}\r\n\r\n\r\n\r\n###############################################################################\r\n#\r\n# SERVICE TEMPLATES\r\n#\r\n###############################################################################\r\n\r\n# Generic service definition template\r\n# This is NOT a real service, just a template!\r\n\r\ndefine service {\r\n\r\n    name                            generic-service         ; The 'name' of this service template\r\n    active_checks_enabled           1                       ; Active service checks are enabled\r\n    passive_checks_enabled          1                       ; Passive service checks are enabled/accepted\r\n    parallelize_check               1                       ; Active service checks should be parallelized (disabling this can lead to major performance problems)\r\n    obsess_over_service             1                       ; We should obsess over this service (if necessary)\r\n    check_freshness                 0                       ; Default is to NOT check service 'freshness'\r\n    notifications_enabled           1                       ; Service notifications are enabled\r\n    event_handler_enabled           1                       ; Service event handler is enabled\r\n    flap_detection_enabled          1                       ; Flap detection is enabled\r\n    process_perf_data               1                       ; Process performance data\r\n    retain_status_information       1                       ; Retain status information across program restarts\r\n    retain_nonstatus_information    1                       ; Retain non-status information across program restarts\r\n    is_volatile                     0                       ; The service is not volatile\r\n    check_period                    24x7                    ; The service can be checked at any time of the day\r\n    max_check_attempts              3                       ; Re-check the service up to 3 times in order to determine its final (hard) state\r\n    check_interval                  10                      ; Check the service every 10 minutes under normal conditions\r\n    retry_interval                  2                       ; Re-check the service every two minutes until a hard state can be determined\r\n    contact_groups                  admins                  ; Notifications get sent out to everyone in the 'admins' group\r\n    notification_options            w,u,c,r                 ; Send notifications about warning, unknown, critical, and recovery events\r\n    notification_interval           60                      ; Re-notify about service problems every hour\r\n    notification_period             24x7                    ; Notifications can be sent out at any time\r\n    register                        0                       ; DON'T REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!\r\n}\r\n\r\n\r\n\r\n# Local service definition template\r\n# This is NOT a real service, just a template!\r\n\r\ndefine service {\r\n\r\n    name                            local-service           ; The name of this service template\r\n    use                             generic-service         ; Inherit default values from the generic-service definition\r\n    max_check_attempts              4                       ; Re-check the service up to 4 times in order to determine its final (hard) state\r\n    check_interval                  5                       ; Check the service every 5 minutes under normal conditions\r\n    retry_interval                  1                       ; Re-check the service every minute until a hard state can be determined\r\n    register                        0                       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!\r\n}\r\n"
      },
      {
        "path": "/home/fs_src/etc/objects/timeperiods.cfg ",
        "content": "###############################################################################\r\n# TIMEPERIODS.CFG - SAMPLE TIMEPERIOD DEFINITIONS\r\n#\r\n#\r\n# NOTES: This config file provides you with some example timeperiod definitions\r\n#        that you can reference in host, service, contact, and dependency\r\n#        definitions.\r\n#\r\n#        You don't need to keep timeperiods in a separate file from your other\r\n#        object definitions.  This has been done just to make things easier to\r\n#        understand.\r\n#\r\n###############################################################################\r\n\r\n\r\n\r\n###############################################################################\r\n#\r\n# TIMEPERIOD DEFINITIONS\r\n#\r\n###############################################################################\r\n\r\n# This defines a timeperiod where all times are valid for checks,\r\n# notifications, etc.  The classic \"24x7\" support nightmare. :-)\r\n\r\ndefine timeperiod {\r\n\r\n    name                    24x7\r\n    timeperiod_name         24x7\r\n    alias                   24 Hours A Day, 7 Days A Week\r\n\r\n    sunday                  00:00-24:00\r\n    monday                  00:00-24:00\r\n    tuesday                 00:00-24:00\r\n    wednesday               00:00-24:00\r\n    thursday                00:00-24:00\r\n    friday                  00:00-24:00\r\n    saturday                00:00-24:00\r\n}\r\n\r\n\r\ndefine timeperiod {\r\n\r\n    name                    24x5\r\n    timeperiod_name         24x5\r\n    alias                   24 Hours A Day, 5 Days A Week\r\n\r\n\r\n    monday                  00:00-24:00\r\n    tuesday                 00:00-24:00\r\n    wednesday               00:00-24:00\r\n    thursday                00:00-24:00\r\n    friday                  00:00-24:00\r\n\r\n}\r\ndefine timeperiod {\r\n\r\n    name                    12x7\r\n    timeperiod_name         12x7\r\n    alias                   12 Hours A Day, 7 Days A Week\r\n\r\n    sunday                  06:00-18:00\r\n    monday                  06:00-18:00\r\n    tuesday                 06:00-18:00\r\n    wednesday               06:00-18:00\r\n    thursday                06:00-18:00\r\n    friday                  06:00-18:00\r\n    saturday                06:00-18:00\r\n}\r\ndefine timeperiod {\r\n\r\n    name                    12x5\r\n    timeperiod_name         12x5\r\n    alias                   12 Hours A Day, 5 Days A Week\r\n    monday                  06:00-18:00\r\n    tuesday                 06:00-18:00\r\n    wednesday               06:00-18:00\r\n    thursday                06:00-18:00\r\n    friday                  06:00-18:00\r\n}\r\n\r\n# This defines a timeperiod that is normal workhours for\r\n# those of us monitoring networks and such in the U.S.\r\n\r\ndefine timeperiod {\r\n\r\n    name                    workhours\r\n    timeperiod_name         workhours\r\n    alias                   Normal Work Hours\r\n\r\n    monday                  09:00-17:00\r\n    tuesday                 09:00-17:00\r\n    wednesday               09:00-17:00\r\n    thursday                09:00-17:00\r\n    friday                  09:00-17:00\r\n}\r\n\r\n\r\n\r\n# This defines the *perfect* check and notification\r\n# timeperiod\r\n\r\ndefine timeperiod {\r\n\r\n    name                    none\r\n    timeperiod_name         none\r\n    alias                   No Time Is A Good Time\r\n}\r\n\r\n\r\n\r\n# Some U.S. holidays\r\n# Note: The timeranges for each holiday are meant to *exclude* the holidays from being\r\n# treated as a valid time for notifications, etc.  You probably don't want your pager\r\n# going off on New Year's.  Although your employer might... :-)\r\n\r\ndefine timeperiod {\r\n\r\n    name                    us-holidays\r\n    timeperiod_name         us-holidays\r\n    alias                   U.S. Holidays\r\n\r\n    january 1               00:00-00:00     ; New Years\r\n    monday -1 may           00:00-00:00     ; Memorial Day (last Monday in May)\r\n    july 4                  00:00-00:00     ; Independence Day\r\n    monday 1 september      00:00-00:00     ; Labor Day (first Monday in September)\r\n    thursday 4 november     00:00-00:00     ; Thanksgiving (4th Thursday in November)\r\n    december 25             00:00-00:00     ; Christmas\r\n}\r\n\r\n\r\n\r\n# This defines a modified \"24x7\" timeperiod that covers every day of the\r\n# year, except for U.S. holidays (defined in the timeperiod above).\r\n\r\ndefine timeperiod {\r\n\r\n    name                    24x7_sans_holidays\r\n    timeperiod_name         24x7_sans_holidays\r\n    alias                   24x7 Sans Holidays\r\n\r\n    use                     us-holidays     ; Get holiday exceptions from other timeperiod\r\n\r\n    sunday                  00:00-24:00\r\n    monday                  00:00-24:00\r\n    tuesday                 00:00-24:00\r\n    wednesday               00:00-24:00\r\n    thursday                00:00-24:00\r\n    friday                  00:00-24:00\r\n    saturday                00:00-24:00\r\n}\r\n"
      }
    ],
    "file_write_permissions": [
      {
        "path": "/home/app",
        "recursive": true
      }
    ],
    "workers": {
      "blocking": "/usr/local/nagios/bin/nagios  /usr/local/nagios/etc/nagios.cfg "
    },
    "actionators": [
      {
        "name": "change_na_password",
        "label": "Change Nagios Admin password",
        "return_type": "plain_text",
        "variables": [
          {
            "name": "password",
            "input": {
              "type": "password_with_confirmation"
            }
          }
        ],
        "script": {
          "language": "sh",
          "content": "#!/bin/sh\r\nhtpasswd  -b /usr/local/nagios/etc/htpasswd.users nagiosadmin $password"
        }
      },
      {
        "name": "add_host",
        "return_type": "plain_text",
        "variables": [
          {
            "name": "hostname",
            "mandatory": true,
            "input": {
              "type": "string"
            }
          },
          {
            "name": "max_check_attempts",
            "value": "-1",
            "mandatory": true,
            "input": {
              "type": "integer"
            }
          },
          {
            "name": "check_period",
            "mandatory": true,
            "input": {
              "type": "select_with_input",
              "comment": "timeperiod name",
              "collection": {
                "items": {
                  "24x7": "24hrs 7 days a week",
                  "24x5": "24hrs 5 days a week",
                  "8x7": "8am - 5pm 7 days a week",
                  "8x5": "8am - 5pm days a week",
                  "12x7": "6am - 6pm 7 days a week",
                  "12x5": "6am - 6pm 5 days a week"
                }
              }
            }
          },
          {
            "name": "contacts",
            "mandatory": true,
            "input": {
              "type": "string"
            }
          },
          {
            "name": "config_fragment",
            "value": "define host {     host_name    host_name    #alias    alias    # display_name    display_name    # address    address    # parents    host_names    # importance    #    # hostgroups    hostgroup_names    # check_command    command_name    # initial_state    [o,d,u]     max_check_attempts    #    # check_interval    #    # retry_interval    #    # active_checks_enabled    [0/1]    # passive_checks_enabled    [0/1]     check_period    timeperiod_name    # obsess_over_host|obsess    [0/1]    # check_freshness    [0/1]    # freshness_threshold    #    # event_handler    command_name    # event_handler_enabled    [0/1]    # low_flap_threshold    #    # high_flap_threshold    #    # flap_detection_enabled    [0/1]    # flap_detection_options    [o,d,u]    # process_perf_data    [0/1]    # retain_status_information    [0/1]    # retain_nonstatus_information    [0/1]     contacts    contacts     contact_groups    contact_groups     notification_interval    #    # first_notification_delay    #     notification_period    timeperiod_name    # notification_options    [d,u,r,f,s]    # notifications_enabled    [0/1]    # stalking_options    [o,d,u,N]    # notes    note_string    # notes_url    url    # action_url    url    # icon_image    image_file    # icon_image_alt    alt_string    # vrml_image    image_file    # statusmap_image    image_file    # 2d_coords    x_coord,y_coord    # 3d_coords    x_coord,y_coord,z_coord } ",
            "input": {
              "type": "text"
            }
          },
          {
            "name": "contact_groups",
            "input": {
              "type": "string"
            }
          },
          {
            "name": "notification_interval",
            "input": {
              "type": "integer"
            }
          },
          {
            "name": "notification_period",
            "input": {
              "type": "select_with_input",
              "comment": "timeperiod_name",
              "collection": {
                "include_blank": true,
                "items": {
                  "24x7": "24hrs 7 days a week",
                  "24x5": "24hrs 5 days a week",
                  "8x7": "6am to 6pm 7 days a week",
                  "8x5": "6am to 6pm 5 days a week",
                  "6to6x7": "6am to 6pm 7 days a week",
                  "6to6x5": "6am to 6pm 5 days a week"
                }
              }
            }
          }
        ],
        "script": {
          "language": "sh",
          "content": "#!/bin/sh\r\n\r\necho \"define host {\r\n    host_name\t$hostname\r\n    max_check_attempts $max_check_attempts\r\n    check_period\t$check_period\r\n    contacts\t$contacts\r\n    contact_groups\t$contact_groups\r\n\tnotification_interval $notification_interval\r\n\tnotification_period $notification_period\r\n\t$config_fragment\r\n\t}\" >/home/fs/etc/hosts/$hostname.cfg\r\n"
        }
      },
      {
        "name": "edit_host",
        "label": "Edit_host",
        "return_type": "plain_text",
        "variables": [
          {
            "name": "hostname",
            "mandatory": true,
            "input": {
              "type": "string"
            }
          },
          {
            "name": "file_content",
            "mandatory": true,
            "input": {
              "type": "text"
            }
          }
        ],
        "script": {
          "language": "sh",
          "content": "#!/bin/sh\r\necho $file_content > /home/fs/etc/hosts/$hostname.cfg"
        }
      },
      {
        "name": "view_host",
        "return_type": "plain_text",
        "variables": [
          {
            "name": "hostname",
            "mandatory": true,
            "input": {
              "type": "string"
            }
          }
        ],
        "script": {
          "language": "sh",
          "content": "#!/bin/bash\r\n\r\ncat /home/fs/etc/hosts/$hostname.cfg"
        }
      },
      {
        "name": "list_hosts",
        "return_type": "json",
        "script": {
          "language": "sh",
          "content": "#!/bin.sh\r\ncd /home/fs/etc/hosts\r\necho '{\"hosts\":['\r\nc=0\r\nfor host in `ls *cfg | sed \"s/\\.cfg//\"`\r\n do\r\n if test c -ne 0\r\n  then\r\n  else\r\n   echo ,\r\n   c=1\r\n fi \r\n echo '\"'$host'\"'\r\ndone\r\necho ']}'"
        }
      }
    ],
    "framework_specific": {
      "apache_httpd_configurations": [
        {
          "content": "ScriptAlias /nagios/cgi-bin \"/usr/local/nagios/sbin\"\r\n\r\n<Directory \"/usr/local/nagios/sbin\">\r\n\r\n   Options ExecCGI\r\n   AllowOverride None\r\n   <IfVersion >= 2.3>\r\n      <RequireAll>\r\n         Require all granted\r\n         AuthName \"Nagios Access\"\r\n         AuthType Basic\r\n         AuthUserFile /usr/local/nagios/etc/htpasswd.users\r\n         Require valid-user\r\n      </RequireAll>\r\n   </IfVersion>\r\n   <IfVersion < 2.3>\r\n      Order allow,deny\r\n      Allow from all\r\n      AuthName \"Nagios Access\"\r\n      AuthType Basic\r\n      AuthUserFile /usr/local/nagios/etc/htpasswd.users\r\n      Require valid-user\r\n   </IfVersion>\r\n</Directory>\r\n\r\nAlias /nagios \"/usr/local/nagios/share\"\r\n\r\n<Directory \"/usr/local/nagios/share\">\r\n   Options None\r\n   AllowOverride None\r\n   <IfVersion >= 2.3>\r\n      <RequireAll>\r\n         Require all granted\r\n         AuthName \"Nagios Access\"\r\n         AuthType Basic\r\n         AuthUserFile /usr/local/nagios/etc/htpasswd.users\r\n         Require valid-user\r\n      </RequireAll>\r\n   </IfVersion>\r\n   <IfVersion < 2.3>\r\n      Order allow,deny\r\n      Allow from all\r\n      AuthName \"Nagios Access\"\r\n      AuthType Basic\r\n      AuthUserFile /usr/local/nagios/etc/htpasswd.users\r\n      Require valid-user\r\n   </IfVersion>\r\n</Directory>"
        }
      ]
    }
  }
}
